{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Card\\\\Card.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CardContent from \"./CardContent\";\nimport CardActions from \"./CardActions\";\nimport CardCover from \"./CardCover\";\nimport CardTitle from \"./CardTitle\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      elevation: new Animated.Value(_this.props.elevation)\n    };\n\n    _this._handlePressIn = function () {\n      Animated.timing(_this.state.elevation, {\n        toValue: 8,\n        duration: 150\n      }).start();\n    };\n\n    _this._handlePressOut = function () {\n      Animated.timing(_this.state.elevation, {\n        toValue: _this.props.elevation,\n        duration: 150\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          cardElevation = _this$props.elevation,\n          onLongPress = _this$props.onLongPress,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          testID = _this$props.testID,\n          accessible = _this$props.accessible,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"elevation\", \"onLongPress\", \"onPress\", \"style\", \"theme\", \"testID\", \"accessible\"]);\n\n      var elevation = this.state.elevation;\n      var roundness = theme.roundness;\n      var total = React.Children.count(children);\n      var siblings = React.Children.map(children, function (child) {\n        return React.isValidElement(child) && child.type ? child.type.displayName : null;\n      });\n      return React.createElement(Surface, _extends({\n        style: [{\n          borderRadius: roundness,\n          elevation: elevation\n        }, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }), React.createElement(TouchableWithoutFeedback, {\n        delayPressIn: 0,\n        disabled: !(onPress || onLongPress),\n        onLongPress: onLongPress,\n        onPress: onPress,\n        onPressIn: onPress ? this._handlePressIn : undefined,\n        onPressOut: onPress ? this._handlePressOut : undefined,\n        testID: testID,\n        accessible: accessible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.innerContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, React.Children.map(children, function (child, index) {\n        return React.isValidElement(child) ? React.cloneElement(child, {\n          index: index,\n          total: total,\n          siblings: siblings\n        }) : child;\n      }))));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nCard.Content = CardContent;\nCard.Actions = CardActions;\nCard.Cover = CardCover;\nCard.Title = CardTitle;\nCard.defaultProps = {\n  elevation: 1\n};\nvar styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1\n  }\n});\nexport default withTheme(Card);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Card/Card.js"],"names":["React","CardContent","CardActions","CardCover","CardTitle","Surface","withTheme","Card","state","elevation","Animated","Value","props","_handlePressIn","timing","toValue","duration","start","_handlePressOut","children","cardElevation","onLongPress","onPress","style","theme","testID","accessible","rest","roundness","total","Children","count","siblings","map","child","isValidElement","type","displayName","borderRadius","undefined","styles","innerContainer","index","cloneElement","Component","Content","Actions","Cover","Title","defaultProps","StyleSheet","create","flexGrow"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  Animated,\n  View,\n  TouchableWithoutFeedback,\n  StyleSheet,\n} from 'react-native';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\nimport CardCover from './CardCover';\nimport CardTitle from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof Surface> & {|\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation: number,\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => mixed,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  /**\n   * Content of the `Card`.\n   */\n  children: React.Node,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string,\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean,\n|};\n\ntype State = {\n  elevation: Animated.Value,\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={(props) => <Avatar.Icon {...props} icon=\"folder\" />} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Card extends React.Component<Props, State> {\n  // @component ./CardContent.js\n  static Content = CardContent;\n  // @component ./CardActions.js\n  static Actions = CardActions;\n  // @component ./CardCover.js\n  static Cover = CardCover;\n  // @component ./CardTitle.js\n  static Title = CardTitle;\n\n  static defaultProps = {\n    elevation: 1,\n  };\n\n  state = {\n    elevation: new Animated.Value(this.props.elevation),\n  };\n\n  _handlePressIn = () => {\n    Animated.timing(this.state.elevation, {\n      toValue: 8,\n      duration: 150,\n    }).start();\n  };\n\n  _handlePressOut = () => {\n    Animated.timing(this.state.elevation, {\n      toValue: this.props.elevation,\n      duration: 150,\n    }).start();\n  };\n\n  render() {\n    const {\n      children,\n      elevation: cardElevation,\n      onLongPress,\n      onPress,\n      style,\n      theme,\n      testID,\n      accessible,\n      ...rest\n    } = this.props;\n    const { elevation } = this.state;\n    const { roundness } = theme;\n    const total = React.Children.count(children);\n    const siblings = React.Children.map(\n      children,\n      child =>\n        React.isValidElement(child) && child.type\n          ? child.type.displayName\n          : null\n    );\n    return (\n      <Surface\n        style={[{ borderRadius: roundness, elevation }, style]}\n        {...rest}\n      >\n        <TouchableWithoutFeedback\n          delayPressIn={0}\n          disabled={!(onPress || onLongPress)}\n          onLongPress={onLongPress}\n          onPress={onPress}\n          onPressIn={onPress ? this._handlePressIn : undefined}\n          onPressOut={onPress ? this._handlePressOut : undefined}\n          testID={testID}\n          accessible={accessible}\n        >\n          <View style={styles.innerContainer}>\n            {React.Children.map(\n              children,\n              (child, index) =>\n                React.isValidElement(child)\n                  ? React.cloneElement(child, {\n                      index,\n                      total,\n                      siblings,\n                    })\n                  : child\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n  },\n});\n\nexport default withTheme(Card);\n"]},"metadata":{},"sourceType":"module"}