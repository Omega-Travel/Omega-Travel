{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation login($input: LoginInput!) {\\n    login(input: $input) {      \\n      ok,\\n      error,\\n      user {\\n        id,\\n        fullname,\\n        email,\\n        password,\\n        token\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar LOGIN_MUTATION = gql(_templateObject());\nexport var useForm = function useForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _React$useState = React.useState({\n    password: undefined,\n    email: undefined\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(key) {\n    return function (value) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, value)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", onSubmit(state));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};\nexport var useLogin = function useLogin() {\n  var _useMutation = useMutation(LOGIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      login = _useMutation2[0];\n\n  var _useForm = useForm({\n    onSubmit: function onSubmit(_ref2) {\n      var values = _extends({}, _ref2);\n\n      console.log(\"LOGIN\", values);\n      return login({\n        variables: {\n          input: values\n        }\n      }).then(function _callee(_ref3) {\n        var data, token;\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = _ref3.data;\n\n                if (!data.login.ok) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                console.log(\"Data\", {\n                  data: data\n                });\n                token = data.register.token;\n                _context2.next = 6;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", token));\n\n              case 6:\n                return _context2.abrupt(\"return\", data);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }),\n      state = _useForm.state,\n      handleChange = _useForm.handleChange,\n      handleSubmit = _useForm.handleSubmit;\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/Login/hooks/useLogin.ts"],"names":["React","useMutation","gql","LOGIN_MUTATION","useForm","onSubmit","useState","password","undefined","email","state","setState","handleChange","key","value","handleSubmit","useLogin","login","values","console","log","variables","input","then","data","ok","token","register","AsyncStorage","setItem"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;;AAGA,IAAMC,cAAc,GAAGD,GAAH,mBAApB;AAgBA,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBACbL,KAAK,CAACM,QAAN,CAAe;AAACC,IAAAA,QAAQ,EAAEC,SAAX;AAAsBC,IAAAA,KAAK,EAAED;AAA7B,GAAf,CADa;AAAA;AAAA,MAChCE,KADgC;AAAA,MACzBC,QADyB;;AAGvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD;AAAA,WAAS,UAACC,KAAD,EAAW;AACvCH,MAAAA,QAAQ,iCACHD,KADG,2BAELG,GAFK,EAECC,KAFD,GAAR;AAID,KALoB;AAAA,GAArB;;AAOA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA,6CACZV,QAAQ,CAACK,KAAD,CADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,SAAO;AACLA,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLG,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKD,CAnBM;AAqBP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,qBACVf,WAAW,CAACE,cAAD,CADD;AAAA;AAAA,MACnBc,KADmB;;AAAA,iBAEoBb,OAAO,CAAC;AACpDC,IAAAA,QAAQ,EAAE,yBAAmB;AAAA,UAAba,MAAa;;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACA,aAAOD,KAAK,CAAC;AACXI,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAEJ;AADE;AADA,OAAD,CAAL,CAIJK,IAJI,CAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,gBAAAA,IAAT,SAASA,IAAT;;AAAA,qBACFA,IAAI,CAACP,KAAL,CAAWQ,EADT;AAAA;AAAA;AAAA;;AAEJN,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB;AAAEI,kBAAAA,IAAI,EAAJA;AAAF,iBAApB;AACME,gBAAAA,KAHF,GAGUF,IAAI,CAACG,QAAL,CAAcD,KAHxB;AAAA;AAAA,iDAIEE,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B,CAJF;;AAAA;AAAA,kDAMCF,IAND;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJD,CAAP;AAYD;AAfmD,GAAD,CAF3B;AAAA,MAElBd,KAFkB,YAElBA,KAFkB;AAAA,MAEXE,YAFW,YAEXA,YAFW;AAAA,MAEGG,YAFH,YAEGA,YAFH;;AAmB1B,SAAO;AACLL,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLG,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKH,CAxBM","sourcesContent":["import * as React from 'react';\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { AsyncStorage } from 'react-native';\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation login($input: LoginInput!) {\r\n    login(input: $input) {      \r\n      ok,\r\n      error,\r\n      user {\r\n        id,\r\n        fullname,\r\n        email,\r\n        password,\r\n        token\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useForm = ({ onSubmit }) => {\r\n  const [state, setState] = React.useState({password: undefined, email: undefined});\r\n  \r\n  const handleChange = (key) => (value) => {\r\n    setState({\r\n      ...state,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    return onSubmit(state);\r\n  };\r\n\r\n  return {\r\n    state,\r\n    handleChange,\r\n    handleSubmit,\r\n  };\r\n};\r\n\r\nexport const useLogin = () => {\r\n    const [login] = useMutation(LOGIN_MUTATION);\r\n    const { state, handleChange, handleSubmit } = useForm({\r\n      onSubmit: ({ ...values }) => {\r\n        console.log(\"LOGIN\", values);\r\n        return login({\r\n          variables: {\r\n            input: values\r\n          },\r\n        }).then(async ({ data }) => {\r\n          if (data.login.ok) {\r\n            console.log(\"Data\", { data });\r\n            const token = data.register.token;\r\n            await AsyncStorage.setItem(\"token\", token);\r\n          }\r\n          return data;\r\n        });\r\n      }\r\n    });\r\n    return {\r\n      state,\r\n      handleChange,\r\n      handleSubmit\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}