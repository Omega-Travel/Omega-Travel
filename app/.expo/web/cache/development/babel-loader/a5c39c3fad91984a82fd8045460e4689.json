{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\RadioButtonGroup.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport createReactContext from 'create-react-context';\nexport var RadioButtonContext = createReactContext(null);\n\nvar RadioButtonGroup = function (_React$Component) {\n  _inherits(RadioButtonGroup, _React$Component);\n\n  var _super = _createSuper(RadioButtonGroup);\n\n  function RadioButtonGroup() {\n    _classCallCheck(this, RadioButtonGroup);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RadioButtonGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          onValueChange = _this$props.onValueChange,\n          children = _this$props.children;\n      return React.createElement(RadioButtonContext.Provider, {\n        value: {\n          value: value,\n          onValueChange: onValueChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, children);\n    }\n  }]);\n\n  return RadioButtonGroup;\n}(React.Component);\n\nRadioButtonGroup.displayName = 'RadioButton.Group';\nexport default RadioButtonGroup;","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/RadioButtonGroup.js"],"names":["React","createReactContext","RadioButtonContext","RadioButtonGroup","props","value","onValueChange","children","Component","displayName"],"mappings":";;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,kBAAP,MAAiD,sBAAjD;AAsBA,OAAO,IAAMC,kBAAoD,GAAGD,kBAAkB,CACpF,IADoF,CAA/E;;IAsCDE,gB;;;;;;;;;;;;;6BAGK;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,aADR,eACQA,aADR;AAAA,UACuBC,QADvB,eACuBA,QADvB;AAGP,aACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,aAAa,EAAbA;AAAT,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,QADH,CADF;AAKD;;;;EAX4BP,KAAK,CAACQ,S;;AAA/BL,gB,CACGM,W,GAAc,mB;AAavB,eAAeN,gBAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport createReactContext, { type Context } from 'create-react-context';\n\ntype Props = {|\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => mixed,\n  /**\n   * Value of the currently selected radio button.\n   */\n  value: string,\n  /**\n   * React elements containing radio buttons.\n   */\n  children: React.Node,\n|};\n\ntype RadioButtonContextType = {\n  value: string,\n  onValueChange: (item: string) => mixed,\n};\n\nexport const RadioButtonContext: Context<?RadioButtonContextType> = createReactContext(\n  null\n);\n\n/**\n * Radio button group allows to control a group of radio buttons.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'first',\n *   };\n *\n *   render() {\n *     return(\n *       <RadioButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *         <View>\n *           <Text>First</Text>\n *           <RadioButton value=\"first\" />\n *         </View>\n *         <View>\n *           <Text>Second</Text>\n *           <RadioButton value=\"second\" />\n *         </View>\n *       </RadioButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass RadioButtonGroup extends React.Component<Props> {\n  static displayName = 'RadioButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <RadioButtonContext.Provider value={{ value, onValueChange }}>\n        {children}\n      </RadioButtonContext.Provider>\n    );\n  }\n}\n\nexport default RadioButtonGroup;\n"]},"metadata":{},"sourceType":"module"}