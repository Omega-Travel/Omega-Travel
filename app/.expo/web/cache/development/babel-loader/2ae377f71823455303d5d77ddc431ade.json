{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation login($input: LoginInput!) {\\n    login(input: $input) {      \\n      ok,\\n      error,\\n      user {\\n        id,\\n        fullname,\\n        email,\\n        password,\\n        token\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation register($input: RegisterInput!) {\\n    register(input: $input) {\\n      id\\n      fullname\\n      email\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar REGISTER_MUTATION = gql(_templateObject());\nvar LOGIN_MUTATION = gql(_templateObject2());\n\nvar useForm = function useForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(key) {\n    return function (value) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, value)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"REGISTER USER\", state);\n            return _context.abrupt(\"return\", onSubmit(state));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};\n\nvar useLogin = function useLogin() {\n  var _useMutation = useMutation(LOGIN_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      login = _useMutation2[0];\n\n  var _useForm = useForm({\n    onSubmit: function onSubmit(_ref2) {\n      var values = _ref2.values;\n      console.log(\"LOGIN\", values);\n      return login({\n        variables: {\n          input: values\n        }\n      }).then(function _callee(_ref3) {\n        var data, token;\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = _ref3.data;\n\n                if (!data.login.ok) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                console.log(\"Data\", {\n                  data: data\n                });\n                token = data.register.token;\n                _context2.next = 6;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", token));\n\n              case 6:\n                return _context2.abrupt(\"return\", data);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }),\n      state = _useForm.state,\n      handleChange = _useForm.handleChange,\n      handleSubmit = _useForm.handleSubmit;\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};\n\nvar useRegister = function useRegister() {\n  var _useMutation3 = useMutation(REGISTER_MUTATION),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      register = _useMutation4[0];\n\n  var _useForm2 = useForm({\n    onSubmit: function onSubmit(_ref4) {\n      var repeatPassword = _ref4.repeatPassword,\n          values = _objectWithoutProperties(_ref4, [\"repeatPassword\"]);\n\n      console.log(\"REGISTER\", values);\n      return register({\n        variables: {\n          input: values\n        }\n      }).then(function _callee2(_ref5) {\n        var data, token;\n        return _regeneratorRuntime.async(function _callee2$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = _ref5.data;\n                console.log(\"Data\", {\n                  data: data\n                });\n                token = data.register.token;\n                _context3.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", token));\n\n              case 5:\n                return _context3.abrupt(\"return\", data);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }),\n      state = _useForm2.state,\n      handleChange = _useForm2.handleChange,\n      handleSubmit = _useForm2.handleSubmit;\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};\n\nexport default useRegister;","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/core/useRegister.ts"],"names":["React","useMutation","gql","REGISTER_MUTATION","LOGIN_MUTATION","useForm","onSubmit","useState","state","setState","handleChange","key","value","handleSubmit","console","log","useLogin","login","values","variables","input","then","data","ok","token","register","AsyncStorage","setItem","useRegister","repeatPassword"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { AsyncStorage } from 'react-native';\n\nconst REGISTER_MUTATION = gql`\n  mutation register($input: RegisterInput!) {\n    register(input: $input) {\n      id\n      fullname\n      email\n      token\n    }\n  }\n`;\n\nconst LOGIN_MUTATION = gql`\n  mutation login($input: LoginInput!) {\n    login(input: $input) {      \n      ok,\n      error,\n      user {\n        id,\n        fullname,\n        email,\n        password,\n        token\n      }\n    }\n  }\n`;\n\nconst useForm = ({ onSubmit }) => {\n  const [state, setState] = React.useState({});\n  const handleChange = (key) => (value) => {\n    setState({\n      ...state,\n      [key]: value,\n    });\n  };\n\n  const handleSubmit = async () => {\n    console.log(\"REGISTER USER\", state);\n    return onSubmit(state);\n  };\n\n  return {\n    state,\n    handleChange,\n    handleSubmit,\n  };\n};\n\nconst useLogin = () => {\n  const [login] = useMutation(LOGIN_MUTATION);\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit: ({ values }) => {\n      console.log(\"LOGIN\", values);\n      return login({\n        variables: {\n          input: values\n        },\n      }).then(async ({ data }) => {\n        if (data.login.ok) {\n          console.log(\"Data\", { data });\n          const token = data.register.token;\n          await AsyncStorage.setItem(\"token\", token);\n        }\n        return data;\n      });\n    }\n  });\n  return {\n    state,\n    handleChange,\n    handleSubmit\n  };\n}\n\nconst useRegister = () => {\n  const [register] = useMutation(REGISTER_MUTATION);\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit: ({ repeatPassword, ...values }) => {\n      console.log(\"REGISTER\", values);\n      return register({\n        variables: {\n          input: values,\n        },\n      }).then(async ({data}) => {\n        console.log(\"Data\", { data });\n        const token = data.register.token;\n        await AsyncStorage.setItem(\"token\", token);\n        return data;\n      });\n    },\n  });\n  return {\n    state,\n    handleChange,\n    handleSubmit,\n  };\n};\nexport default useRegister;\n"]},"metadata":{},"sourceType":"module"}