{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\NewTrip\\\\index.tsx\";\nimport React from 'react';\nimport { Layout } from \"./Layout\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useTrip } from \"./hooks/tripHook\";\nexport var NewTrip = function NewTrip(_ref) {\n  var navigation = _ref.navigation;\n  useSetNavigationOptions(\"New Trip\", false);\n\n  var _useAuth = useAuth(),\n      token = _useAuth.token;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _useTrip = useTrip({\n    userId: token\n  }),\n      state = _useTrip.state,\n      handleChange = _useTrip.handleChange,\n      handleSubmit = _useTrip.handleSubmit;\n\n  var handleAdd = function handleAdd() {\n    var data;\n    return _regeneratorRuntime.async(function handleAdd$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(handleSubmit());\n\n          case 3:\n            data = _context.sent;\n            console.log(\"Data\", data);\n\n            if (data.registerTrip.ok) {\n              navigation.goBack();\n            } else {\n              useAlert({\n                titleError: \"\",\n                errorMessage: data.registerTrip.error\n              });\n            }\n\n            setLoading(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Layout, {\n    loading: loading,\n    handleChange: handleChange,\n    state: state,\n    handleAdd: handleAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/NewTrip/index.tsx"],"names":["React","Layout","useAlert","useSetNavigationOptions","useAuth","useTrip","NewTrip","navigation","token","useState","loading","setLoading","userId","state","handleChange","handleSubmit","handleAdd","data","console","log","registerTrip","ok","goBack","titleError","errorMessage","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AACA,SAASC,QAAT;AACA,SAASC,uBAAT;AACA,SAASC,OAAT;AACA,SAASC,OAAT;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACvCJ,EAAAA,uBAAuB,CAAC,UAAD,EAAa,KAAb,CAAvB;;AADuC,iBAErBC,OAAO,EAFc;AAAA,MAE/BI,KAF+B,YAE/BA,KAF+B;;AAAA,wBAGTR,KAAK,CAACS,QAAN,CAAe,KAAf,CAHS;AAAA;AAAA,MAGhCC,OAHgC;AAAA,MAGvBC,UAHuB;;AAAA,iBAION,OAAO,CAAC;AAACO,IAAAA,MAAM,EAAEJ;AAAT,GAAD,CAJd;AAAA,MAI/BK,KAJ+B,YAI/BA,KAJ+B;AAAA,MAIxBC,YAJwB,YAIxBA,YAJwB;AAAA,MAIVC,YAJU,YAIVA,YAJU;;AAMvC,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACdL,YAAAA,UAAU,CAAC,IAAD,CAAV;AADc;AAAA,6CAGKI,YAAY,EAHjB;;AAAA;AAGRE,YAAAA,IAHQ;AAKdC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;AAEA,gBAAGA,IAAI,CAACG,YAAL,CAAkBC,EAArB,EAAyB;AACrBd,cAAAA,UAAU,CAACe,MAAX;AACH,aAFD,MAGK;AACDpB,cAAAA,QAAQ,CAAC;AAACqB,gBAAAA,UAAU,EAAE,EAAb;AAAiBC,gBAAAA,YAAY,EAAEP,IAAI,CAACG,YAAL,CAAkBK;AAAjD,eAAD,CAAR;AACH;;AAEDd,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAiBA,SAAO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAA0B,IAAA,YAAY,EAAEI,YAAxC;AAAsD,IAAA,KAAK,EAAED,KAA7D;AAAoE,IAAA,SAAS,EAAEG,SAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAxBM","sourcesContent":["import React from 'react';\r\nimport { Layout } from './Layout';\r\nimport { useAlert } from '../../hooks/useAlert';\r\nimport { useSetNavigationOptions } from '../../hooks/useSetNavigationOptions';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { useTrip } from './hooks/tripHook';\r\n\r\nexport const NewTrip = ({ navigation }) => {\r\n    useSetNavigationOptions(\"New Trip\", false);\r\n    const { token } = useAuth();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const { state, handleChange, handleSubmit } = useTrip({userId: token})\r\n\r\n    const handleAdd = async () => {\r\n        setLoading(true);\r\n\r\n        const data = await handleSubmit();\r\n\r\n        console.log(\"Data\", data);\r\n        \r\n        if(data.registerTrip.ok) {\r\n            navigation.goBack();\r\n        }\r\n        else {\r\n            useAlert({titleError: \"\", errorMessage: data.registerTrip.error})\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    return <Layout loading={loading} handleChange={handleChange} state={state} handleAdd={handleAdd} />\r\n}"]},"metadata":{},"sourceType":"module"}