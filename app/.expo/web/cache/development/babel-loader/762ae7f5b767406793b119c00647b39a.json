{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\ProgressBar\\\\ProgressBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport setColor from 'color';\nimport ProgressBarComponent from \"./ProgressBarComponent\";\nimport { withTheme } from \"../../core/theming\";\n\nvar ProgressBar = function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar() {\n    _classCallCheck(this, ProgressBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          progress = _this$props.progress,\n          color = _this$props.color,\n          style = _this$props.style,\n          theme = _this$props.theme;\n      var tintColor = color || theme.colors.primary;\n      var trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n      return React.createElement(ProgressBarComponent, {\n        progress: progress,\n        progressTintColor: tintColor,\n        style: [styles.progressBarHeight, style],\n        trackTintColor: trackTintColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ProgressBar;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  progressBarHeight: {\n    paddingVertical: 10\n  }\n});\nexport default withTheme(ProgressBar);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/ProgressBar/ProgressBar.js"],"names":["React","setColor","ProgressBarComponent","withTheme","ProgressBar","props","progress","color","style","theme","tintColor","colors","primary","trackTintColor","alpha","rgb","string","styles","progressBarHeight","Component","StyleSheet","create","paddingVertical"],"mappings":";;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,QAAP,MAAqB,OAArB;AACA,OAAOC,oBAAP;AACA,SAASC,SAAT;;IAsCMC,W;;;;;;;;;;;;;6BACK;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,KADlB,eACkBA,KADlB;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAEP,UAAMC,SAAS,GAAGH,KAAK,IAAIE,KAAK,CAACE,MAAN,CAAaC,OAAxC;AACA,UAAMC,cAAc,GAAGZ,QAAQ,CAACS,SAAD,CAAR,CACpBI,KADoB,CACd,IADc,EAEpBC,GAFoB,GAGpBC,MAHoB,EAAvB;AAKA,aACE,oBAAC,oBAAD;AACE,QAAA,QAAQ,EAAEV,QADZ;AAEE,QAAA,iBAAiB,EAAEI,SAFrB;AAGE,QAAA,KAAK,EAAE,CAACO,MAAM,CAACC,iBAAR,EAA2BV,KAA3B,CAHT;AAIE,QAAA,cAAc,EAAEK,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;;EAjBuBb,KAAK,CAACmB,S;;AAoBhC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,iBAAiB,EAAE;AACjBI,IAAAA,eAAe,EAAE;AADA;AADY,CAAlB,CAAf;AAMA,eAAenB,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport setColor from 'color';\nimport ProgressBarComponent from './ProgressBarComponent';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = {|\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress: number,\n  /**\n   * Color of the progress bar.\n   */\n  color?: string,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ProgressBar extends React.Component<Props> {\n  render() {\n    const { progress, color, style, theme } = this.props;\n    const tintColor = color || theme.colors.primary;\n    const trackTintColor = setColor(tintColor)\n      .alpha(0.38)\n      .rgb()\n      .string();\n\n    return (\n      <ProgressBarComponent\n        progress={progress}\n        progressTintColor={tintColor}\n        style={[styles.progressBarHeight, style]}\n        trackTintColor={trackTintColor}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  progressBarHeight: {\n    paddingVertical: 10,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}