{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\App.tsx\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { MaterialIcons, Fontisto } from '@expo/vector-icons';\nimport client from \"./client\";\nimport { Continent } from \"./screens/Continent\";\nimport { ContinentStack } from \"./screens/Continent/StackNavigator\";\nvar RootStack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport var AuthContext = React.createContext({\n  token: \"\",\n  setToken: function setToken(x) {\n    console.log(\"X\", x);\n  }\n});\nexport default function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isReady = _React$useState2[0],\n      setReady = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      token = _React$useState4[0],\n      _setToken = _React$useState4[1];\n\n  React.useEffect(function () {\n    AsyncStorage.getItem(\"token\").then(function (token) {\n      if (token) _setToken(token);\n    }).finally(function () {\n      return setReady(true);\n    });\n  }, []);\n  React.useEffect(function () {\n    AsyncStorage.getItem(\"token\").then(function (storedToken) {\n      if (storedToken !== token) {\n        AsyncStorage.setItem(\"token\", token);\n      }\n    });\n  }, [token]);\n  if (!isReady) return null;\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: token,\n      setToken: function setToken(x) {\n        _setToken(x);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(PaperProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          if (route.name === 'Continent') {\n            return React.createElement(Fontisto, {\n              name: \"world-o\",\n              size: 24,\n              color: \"black\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 36\n              }\n            });\n          } else {\n            return React.createElement(MaterialIcons, {\n              name: \"place\",\n              size: 24,\n              color: \"black\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 36\n              }\n            });\n          }\n        }\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Continent\",\n    component: ContinentStack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Region\",\n    component: Continent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/App.tsx"],"names":["React","Provider","PaperProvider","NavigationContainer","createStackNavigator","createBottomTabNavigator","ApolloProvider","MaterialIcons","Fontisto","client","Continent","ContinentStack","RootStack","Tab","AuthContext","createContext","token","setToken","x","console","log","App","useState","isReady","setReady","useEffect","AsyncStorage","getItem","then","finally","storedToken","setItem","route","tabBarIcon","focused","color","size","name","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, AsyncStorage } from \"react-native\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { MaterialIcons, Fontisto } from '@expo/vector-icons'; \nimport client from \"./client\";\nimport { Login } from \"./screens/Login\";\nimport { Register } from \"./screens/Register\";\nimport { Continent } from \"./screens/Continent\";\nimport { PlaceDetail } from \"./screens/PlaceDetail\";\nimport { ContinentStack } from \"./screens/Continent/StackNavigator\";\n\nconst RootStack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport const AuthContext = React.createContext({\n  token: \"\",\n  setToken: (x: string) => {\n    console.log(\"X\", x);\n  },\n});\n\nexport default function App() {\n  const [isReady, setReady] = React.useState(false);\n  const [token, setToken] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    AsyncStorage.getItem(\"token\")\n      .then((token) => {\n        if (token) setToken(token);\n      })\n      .finally(() => setReady(true));\n  }, []);\n\n  React.useEffect(() => {\n    AsyncStorage.getItem(\"token\")\n      .then((storedToken) => {\n        if (storedToken !== token) {\n          AsyncStorage.setItem(\"token\", token);\n        }\n      });\n  }, [token]);\n\n  if (!isReady) return null;\n  \n  //const initialRouteName = token ? \"Home\" : \"Login\";\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        setToken: (x) => {\n          setToken(x);\n        },\n      }}\n    >\n      <ApolloProvider client={client}>\n        <PaperProvider>\n          <NavigationContainer>\n            <Tab.Navigator\n                      screenOptions={({ route }) => ({\n                        tabBarIcon: ({ focused, color, size }) => {\n              \n                          if (route.name === 'Continent') {\n                            return <Fontisto name=\"world-o\" size={24} color=\"black\" />\n                          } else {\n                            return <MaterialIcons name=\"place\" size={24} color=\"black\" />;\n                          }\n              \n                        },\n                      })}\n                >\n              <Tab.Screen name=\"Continent\" component={ContinentStack} />\n              <Tab.Screen name=\"Region\" component={Continent} />\n            </Tab.Navigator>\n            {/* <RootStack.Navigator initialRouteName={\"Home\"}>\n              {!token ? (\n                <>\n                  <RootStack.Screen \n                    name=\"Login\" \n                    component={Login} \n                  />\n                  <RootStack.Screen\n                    name=\"Register\"\n                    component={Register}\n                  />\n                </>\n              ) : (\n                <>\n                  <RootStack.Screen name=\"Home\" component={Home} />\n                  <RootStack.Screen name=\"PlaceDetail\" component={PlaceDetail} />\n                </>\n              )}\n            </RootStack.Navigator> */}\n          </NavigationContainer>\n        </PaperProvider>\n      </ApolloProvider>\n    </AuthContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}