{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\DataTable\\\\DataTableTitle.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Icon from \"../Icon\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableTitle = function (_React$Component) {\n  _inherits(DataTableTitle, _React$Component);\n\n  var _super = _createSuper(DataTableTitle);\n\n  function DataTableTitle() {\n    var _this;\n\n    _classCallCheck(this, DataTableTitle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      spinAnim: new Animated.Value(_this.props.sortDirection === 'ascending' ? 0 : 1)\n    };\n    return _this;\n  }\n\n  _createClass(DataTableTitle, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.sortDirection === this.props.sortDirection) {\n        return;\n      }\n\n      Animated.timing(this.state.spinAnim, {\n        toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numeric = _this$props.numeric,\n          children = _this$props.children,\n          onPress = _this$props.onPress,\n          sortDirection = _this$props.sortDirection,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          numberOfLines = _this$props.numberOfLines,\n          rest = _objectWithoutProperties(_this$props, [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"theme\", \"style\", \"numberOfLines\"]);\n\n      var textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      var spin = this.state.spinAnim.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '180deg']\n      });\n      var icon = sortDirection ? React.createElement(Animated.View, {\n        style: [styles.icon, {\n          transform: [{\n            rotate: spin\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, React.createElement(Icon, {\n        source: \"arrow-downward\",\n        size: 16,\n        color: theme.colors.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      })) : null;\n      return React.createElement(TouchableWithoutFeedback, _extends({\n        disabled: !onPress,\n        onPress: onPress\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: [styles.container, numeric && styles.right, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, icon, React.createElement(Text, {\n        style: [styles.cell, sortDirection ? styles.sorted : {\n          color: textColor\n        }],\n        numberOfLines: numberOfLines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, children)));\n    }\n  }]);\n\n  return DataTableTitle;\n}(React.Component);\n\nDataTableTitle.displayName = 'DataTable.Title';\nDataTableTitle.defaultProps = {\n  numberOfLines: 1\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(DataTableTitle);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/DataTable/DataTableTitle.js"],"names":["React","color","Icon","Text","withTheme","DataTableTitle","state","spinAnim","Animated","Value","props","sortDirection","prevProps","timing","toValue","duration","useNativeDriver","start","numeric","children","onPress","theme","style","numberOfLines","rest","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","styles","transform","rotate","container","right","cell","sorted","Component","displayName","defaultProps","StyleSheet","create","flex","flexDirection","alignContent","paddingVertical","justifyContent","height","lineHeight","fontSize","fontWeight","alignItems","marginLeft"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport color from 'color';\nimport Icon from '../Icon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof TouchableWithoutFeedback> & {|\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.Node,\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean,\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending',\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\ntype State = {\n  spinAnim: Animated.Value,\n};\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <Icon source=\"arrow-downward\" size={16} color={theme.colors.text} />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n"]},"metadata":{},"sourceType":"module"}