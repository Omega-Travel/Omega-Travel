{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Dialog\\\\DialogTitle.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Title from \"../Typography/Title\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DialogTitle = function (_React$Component) {\n  _inherits(DialogTitle, _React$Component);\n\n  var _super = _createSuper(DialogTitle);\n\n  function DialogTitle() {\n    _classCallCheck(this, DialogTitle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DialogTitle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"theme\", \"style\"]);\n\n      return React.createElement(Title, _extends({\n        accessibilityTraits: \"header\",\n        accessibilityRole: \"header\",\n        style: [styles.text, {\n          color: theme.colors.text\n        }, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }), children);\n    }\n  }]);\n\n  return DialogTitle;\n}(React.Component);\n\nDialogTitle.displayName = 'Dialog.Title';\nvar styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  }\n});\nexport default withTheme(DialogTitle);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Dialog/DialogTitle.js"],"names":["React","Title","withTheme","DialogTitle","props","children","theme","style","rest","styles","text","color","colors","Component","displayName","StyleSheet","create","marginTop","marginBottom","marginHorizontal"],"mappings":";;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,KAAP;AACA,SAASC,SAAT;;IA+CMC,W;;;;;;;;;;;;;6BAGK;AAAA,wBACqC,KAAKC,KAD1C;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,KADlB,eACkBA,KADlB;AAAA,UAC4BC,IAD5B;;AAGP,aACE,oBAAC,KAAD;AACE,QAAA,mBAAmB,EAAC,QADtB;AAEE,QAAA,iBAAiB,EAAC,QAFpB;AAGE,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;AAAEC,UAAAA,KAAK,EAAEL,KAAK,CAACM,MAAN,CAAaF;AAAtB,SAAd,EAA4CH,KAA5C;AAHT,SAIMC,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMGH,QANH,CADF;AAUD;;;;EAhBuBL,KAAK,CAACa,S;;AAA1BV,W,CACGW,W,GAAc,c;AAkBvB,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,IAAI,EAAE;AACJO,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,YAAY,EAAE,EAFV;AAGJC,IAAAA,gBAAgB,EAAE;AAHd;AADyB,CAAlB,CAAf;AAQA,eAAejB,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Title from '../Typography/Title';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof Title> & {|\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.Node,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * A component to show a title in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _hideDialog = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Portal>\n *         <Dialog\n *           visible={this.state.visible}\n *           onDismiss={this._hideDialog}>\n *           <Dialog.Title>This is a title</Dialog.Title>\n *           <Dialog.Content>\n *             <Paragraph>This is simple dialog</Paragraph>\n *           </Dialog.Content>\n *         </Dialog>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass DialogTitle extends React.Component<Props> {\n  static displayName = 'Dialog.Title';\n\n  render() {\n    const { children, theme, style, ...rest } = this.props;\n\n    return (\n      <Title\n        accessibilityTraits=\"header\"\n        accessibilityRole=\"header\"\n        style={[styles.text, { color: theme.colors.text }, style]}\n        {...rest}\n      >\n        {children}\n      </Title>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n});\n\nexport default withTheme(DialogTitle);\n"]},"metadata":{},"sourceType":"module"}