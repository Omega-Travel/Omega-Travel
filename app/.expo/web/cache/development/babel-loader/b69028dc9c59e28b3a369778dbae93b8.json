{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation Register($input: RegisterInput!) {\\n    register(input: $input) {\\n      id\\n      fullname\\n      age\\n      email\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar REGISTER_MUTATION = gql(_templateObject());\n\nvar useForm = function useForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(key) {\n    return function (value) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, value)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"REGISTER USER\", state);\n            return _context.abrupt(\"return\", onSubmit(state));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};\n\nvar useRegister = function useRegister() {\n  var _useMutation = useMutation(REGISTER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      register = _useMutation2[0];\n\n  var _useForm = useForm({\n    onSubmit: function onSubmit(_ref2) {\n      var repeatPassword = _ref2.repeatPassword,\n          values = _objectWithoutProperties(_ref2, [\"repeatPassword\"]);\n\n      console.log(\"REGISTER\", values);\n      return register({\n        variables: {\n          input: values\n        }\n      }).then(function _callee(result) {\n        var token;\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"RESULT\", {\n                  result: result\n                });\n                token = result.data.register.token;\n                _context2.next = 4;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", token));\n\n              case 4:\n                return _context2.abrupt(\"return\", result);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }),\n      state = _useForm.state,\n      handleChange = _useForm.handleChange,\n      handleSubmit = _useForm.handleSubmit;\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};\n\nexport default useRegister;","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/core/useRegister.ts"],"names":["React","useMutation","gql","REGISTER_MUTATION","useForm","onSubmit","useState","state","setState","handleChange","key","value","handleSubmit","console","log","useRegister","register","repeatPassword","values","variables","input","then","result","token","data","AsyncStorage","setItem"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;;AAEA,IAAMC,iBAAiB,GAAGD,GAAH,mBAAvB;;AAwBA,IAAME,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBACNL,KAAK,CAACM,QAAN,CAAe,EAAf,CADM;AAAA;AAAA,MACzBC,KADyB;AAAA,MAClBC,QADkB;;AAEhC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD;AAAA,WAAS,UAACC,KAAD,EAAW;AACvCH,MAAAA,QAAQ,iCACHD,KADG,2BAELG,GAFK,EAECC,KAFD,GAAR;AAID,KALoB;AAAA,GAArB;;AAOA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAEnBC,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,KAA7B;AAFmB,6CAGZF,QAAQ,CAACE,KAAD,CAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAMA,SAAO;AACLA,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLG,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKD,CApBD;;AAsBA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,qBACLd,WAAW,CAACE,iBAAD,CADN;AAAA;AAAA,MACjBa,QADiB;;AAAA,iBAEsBZ,OAAO,CAAC;AACpDC,IAAAA,QAAQ,EAAE,yBAAmC;AAAA,UAAhCY,cAAgC,SAAhCA,cAAgC;AAAA,UAAbC,MAAa;;AAC3CL,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,MAAxB;AACA,aAAOF,QAAQ,CAAC;AACdG,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAEF;AADE;AADG,OAAD,CAAR,CAIJG,IAJI,CAIC,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACNT,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB;AAAEQ,kBAAAA,MAAM,EAANA;AAAF,iBAAtB;AACMC,gBAAAA,KAFA,GAEQD,MAAM,CAACE,IAAP,CAAYR,QAAZ,CAAqBO,KAF7B;AAAA;AAAA,iDAGAE,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B,CAHA;;AAAA;AAAA,kDAICD,MAJD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJD,CAAP;AAUD;AAbmD,GAAD,CAF7B;AAAA,MAEhBf,KAFgB,YAEhBA,KAFgB;AAAA,MAETE,YAFS,YAETA,YAFS;AAAA,MAEKG,YAFL,YAEKA,YAFL;;AAiBxB,SAAO;AACLL,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLG,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKD,CAtBD;;AAuBA,eAAeG,WAAf","sourcesContent":["import * as React from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { AsyncStorage } from 'react-native';\nconst REGISTER_MUTATION = gql`\n  mutation Register($input: RegisterInput!) {\n    register(input: $input) {\n      id\n      fullname\n      age\n      email\n      token\n    }\n  }\n`;\n\n// const USERS_QUERY = gql`\n//   # Write your query or mutation here\n//   query Users {\n//     users {\n//       id\n//       fullname\n//       age\n//       email\n//     }\n//   }\n// `;\n\nconst useForm = ({ onSubmit }) => {\n  const [state, setState] = React.useState({});\n  const handleChange = (key) => (value) => {\n    setState({\n      ...state,\n      [key]: value,\n    });\n  };\n\n  const handleSubmit = async () => {\n    // const user = await client.login({email, password});\n    console.log(\"REGISTER USER\", state);\n    return onSubmit(state);\n  };\n\n  return {\n    state,\n    handleChange,\n    handleSubmit,\n  };\n};\n\nconst useRegister = () => {\n  const [register] = useMutation(REGISTER_MUTATION);\n  const { state, handleChange, handleSubmit } = useForm({\n    onSubmit: ({ repeatPassword, ...values }) => {\n      console.log(\"REGISTER\", values);\n      return register({\n        variables: {\n          input: values,\n        },\n      }).then(async (result) => {\n        console.log(\"RESULT\", { result });\n        const token = result.data.register.token;\n        await AsyncStorage.setItem(\"token\", token);\n        return result;\n      });\n    },\n  });\n  return {\n    state,\n    handleChange,\n    handleSubmit,\n  };\n};\nexport default useRegister;\n"]},"metadata":{},"sourceType":"module"}