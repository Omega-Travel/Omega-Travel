{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Card\\\\CardCover.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { withTheme } from \"../../core/theming\";\nimport { grey200 } from \"../../styles/colors\";\n\nvar CardCover = function (_React$Component) {\n  _inherits(CardCover, _React$Component);\n\n  var _super = _createSuper(CardCover);\n\n  function CardCover() {\n    _classCallCheck(this, CardCover);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CardCover, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          index = _this$props.index,\n          total = _this$props.total,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"index\", \"total\", \"style\", \"theme\"]);\n\n      var roundness = theme.roundness;\n      var coverStyle;\n\n      if (index === 0) {\n        if (total === 1) {\n          coverStyle = {\n            borderRadius: roundness\n          };\n        } else {\n          coverStyle = {\n            borderTopLeftRadius: roundness,\n            borderTopRightRadius: roundness\n          };\n        }\n      } else if (typeof total === 'number' && index === total - 1) {\n        coverStyle = {\n          borderBottomLeftRadius: roundness\n        };\n      }\n\n      return React.createElement(View, {\n        style: [styles.container, coverStyle, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, _extends({}, rest, {\n        style: [styles.image, coverStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return CardCover;\n}(React.Component);\n\nCardCover.displayName = 'Card.Cover';\nvar styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: null,\n    width: null,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover'\n  }\n});\nexport default withTheme(CardCover);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Card/CardCover.js"],"names":["React","withTheme","grey200","CardCover","props","index","total","style","theme","rest","roundness","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","styles","container","image","Component","displayName","StyleSheet","create","height","backgroundColor","overflow","flex","width","padding","justifyContent","resizeMode"],"mappings":";;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,SAAT;AACA,SAASC,OAAT;;IAsCMC,S;;;;;;;;;;;;;6BAGK;AAAA,wBACyC,KAAKC,KAD9C;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,KADR,eACQA,KADR;AAAA,UACeC,KADf,eACeA,KADf;AAAA,UACsBC,KADtB,eACsBA,KADtB;AAAA,UACgCC,IADhC;;AAAA,UAECC,SAFD,GAEeF,KAFf,CAECE,SAFD;AAIP,UAAIC,UAAJ;;AAEA,UAAIN,KAAK,KAAK,CAAd,EAAiB;AACf,YAAIC,KAAK,KAAK,CAAd,EAAiB;AACfK,UAAAA,UAAU,GAAG;AACXC,YAAAA,YAAY,EAAEF;AADH,WAAb;AAGD,SAJD,MAIO;AACLC,UAAAA,UAAU,GAAG;AACXE,YAAAA,mBAAmB,EAAEH,SADV;AAEXI,YAAAA,oBAAoB,EAAEJ;AAFX,WAAb;AAID;AACF,OAXD,MAWO,IAAI,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;AAC3DK,QAAAA,UAAU,GAAG;AACXI,UAAAA,sBAAsB,EAAEL;AADb,SAAb;AAGD;;AAED,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACM,MAAM,CAACC,SAAR,EAAmBN,UAAnB,EAA+BJ,KAA/B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,eAAWE,IAAX;AAAiB,QAAA,KAAK,EAAE,CAACO,MAAM,CAACE,KAAR,EAAeP,UAAf,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;;;EA/BqBX,KAAK,CAACmB,S;;AAAxBhB,S,CACGiB,W,GAAc,Y;AAiCvB,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,eAAe,EAAEtB,OAFR;AAGTuB,IAAAA,QAAQ,EAAE;AAHD,GADoB;AAM/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,IAAI,EAAE,CADD;AAELH,IAAAA,MAAM,EAAE,IAFH;AAGLI,IAAAA,KAAK,EAAE,IAHF;AAILC,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,cAAc,EAAE,UALX;AAMLC,IAAAA,UAAU,EAAE;AANP;AANwB,CAAlB,CAAf;AAgBA,eAAe7B,SAAS,CAACE,SAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof Image> & {|\n  /**\n   * @internal\n   */\n  index?: number,\n  /**\n   * @internal\n   */\n  total?: number,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://facebook.github.io/react-native/docs/image.html#props\n */\nclass CardCover extends React.Component<Props> {\n  static displayName = 'Card.Cover';\n\n  render() {\n    const { index, total, style, theme, ...rest } = this.props;\n    const { roundness } = theme;\n\n    let coverStyle;\n\n    if (index === 0) {\n      if (total === 1) {\n        coverStyle = {\n          borderRadius: roundness,\n        };\n      } else {\n        coverStyle = {\n          borderTopLeftRadius: roundness,\n          borderTopRightRadius: roundness,\n        };\n      }\n    } else if (typeof total === 'number' && index === total - 1) {\n      coverStyle = {\n        borderBottomLeftRadius: roundness,\n      };\n    }\n\n    return (\n      <View style={[styles.container, coverStyle, style]}>\n        <Image {...rest} style={[styles.image, coverStyle]} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: null,\n    width: null,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover',\n  },\n});\n\nexport default withTheme(CardCover);\n"]},"metadata":{},"sourceType":"module"}