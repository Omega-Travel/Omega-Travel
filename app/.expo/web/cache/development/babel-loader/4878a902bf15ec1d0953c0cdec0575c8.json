{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Checkbox.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport CheckboxAndroid from \"./CheckboxAndroid\";\nimport CheckboxIOS from \"./CheckboxIOS\";\nimport { withTheme } from \"../core/theming\";\n\nvar Checkbox = function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      return Platform.OS === 'ios' ? React.createElement(CheckboxIOS, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      })) : React.createElement(CheckboxAndroid, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\nCheckbox.Android = CheckboxAndroid;\nCheckbox.IOS = CheckboxIOS;\nexport default withTheme(Checkbox);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Checkbox.js"],"names":["React","CheckboxAndroid","CheckboxIOS","withTheme","Checkbox","Platform","OS","props","Component","Android","IOS"],"mappings":";;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,eAAP;AACA,OAAOC,WAAP;AACA,SAASC,SAAT;;IA0EMC,Q;;;;;;;;;;;;;6BAOK;AACP,aAAOC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACL,oBAAC,WAAD,eAAiB,KAAKC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADK,GAGL,oBAAC,eAAD,eAAqB,KAAKA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAKD;;;;EAboBP,KAAK,CAACQ,S;;AAAvBJ,Q,CAEGK,O,GAAUR,e;AAFbG,Q,CAKGM,G,GAAMR,W;AAWf,eAAeC,SAAS,CAACC,QAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types';\n\ntype Props = {|\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate',\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string,\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: false,\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *     return (\n *       <Checkbox\n *         status={checked ? 'checked' : 'unchecked'}\n *         onPress={() => { this.setState({ checked: !checked }); }}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxAndroid.js\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.js\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"module"}