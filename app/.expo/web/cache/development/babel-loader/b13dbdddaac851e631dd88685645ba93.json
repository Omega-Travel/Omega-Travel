{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Drawer\\\\DrawerSection.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport Divider from \"../Divider\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DrawerSection = function (_React$Component) {\n  _inherits(DrawerSection, _React$Component);\n\n  var _super = _createSuper(DrawerSection);\n\n  function DrawerSection() {\n    _classCallCheck(this, DrawerSection);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DrawerSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          title = _this$props.title,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"title\", \"theme\", \"style\"]);\n\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var titleColor = color(colors.text).alpha(0.54).rgb().string();\n      var fontFamily = fonts.medium;\n      return React.createElement(View, _extends({\n        style: [styles.container, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }), title && React.createElement(View, {\n        style: styles.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: {\n          color: titleColor,\n          fontFamily: fontFamily,\n          marginLeft: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, title)), children, React.createElement(Divider, {\n        style: styles.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return DrawerSection;\n}(React.Component);\n\nDrawerSection.displayName = 'Drawer.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  divider: {\n    marginTop: 4\n  }\n});\nexport default withTheme(DrawerSection);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Drawer/DrawerSection.js"],"names":["color","React","Text","Divider","withTheme","DrawerSection","props","children","title","theme","style","rest","colors","fonts","titleColor","text","alpha","rgb","string","fontFamily","medium","styles","container","titleContainer","marginLeft","divider","Component","displayName","StyleSheet","create","marginBottom","height","justifyContent","marginTop"],"mappings":";;;;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAASC,SAAT;;IAsDMC,a;;;;;;;;;;;;;6BAGK;AAAA,wBAC4C,KAAKC,KADjD;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,KADlB,eACkBA,KADlB;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAAA,UACmCC,IADnC;;AAAA,UAECC,MAFD,GAEmBH,KAFnB,CAECG,MAFD;AAAA,UAESC,KAFT,GAEmBJ,KAFnB,CAESI,KAFT;AAGP,UAAMC,UAAU,GAAGd,KAAK,CAACY,MAAM,CAACG,IAAR,CAAL,CAChBC,KADgB,CACV,IADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAAnB;AAIA,UAAMC,UAAU,GAAGN,KAAK,CAACO,MAAzB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBZ,KAAnB;AAAb,SAA4CC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGH,KAAK,IACJ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEa,MAAM,CAACE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,aAAa,EAAE,CADjB;AAEE,QAAA,KAAK,EAAE;AAAEvB,UAAAA,KAAK,EAAEc,UAAT;AAAqBK,UAAAA,UAAU,EAAVA,UAArB;AAAiCK,UAAAA,UAAU,EAAE;AAA7C,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGhB,KAJH,CADF,CAFJ,EAWGD,QAXH,EAYE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEc,MAAM,CAACI,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF;AAgBD;;;;EA5ByBxB,KAAK,CAACyB,S;;AAA5BrB,a,CACGsB,W,GAAc,gB;AA8BvB,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,YAAY,EAAE;AADL,GADoB;AAI/BP,EAAAA,cAAc,EAAE;AACdQ,IAAAA,MAAM,EAAE,EADM;AAEdC,IAAAA,cAAc,EAAE;AAFF,GAJe;AAQ/BP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,SAAS,EAAE;AADJ;AARsB,CAAlB,CAAf;AAaA,eAAe7B,SAAS,CAACC,aAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = React.ElementConfig<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string,\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.Node,\n  style?: ViewStyleProp,\n  /**\n   * @optional\n   */\n  theme: Theme,\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     active: 'first',\n *   };\n *\n *   render() {\n *     const { active } = this.state;\n *\n *     return (\n *       <Drawer.Section title=\"Some title\">\n *         <Drawer.Item\n *           label=\"First Item\"\n *           active={active === 'first'}\n *           onPress={() => { this.setState({ active: 'first' }); }}\n *         />\n *         <Drawer.Item\n *           label=\"Second Item\"\n *           active={active === 'second'}\n *           onPress={() => { this.setState({ active: 'second' }); }}\n *         />\n *      </Drawer.Section>\n *     );\n *   }\n * }\n * ```\n */\nclass DrawerSection extends React.Component<Props> {\n  static displayName = 'Drawer.Section';\n\n  render() {\n    const { children, title, theme, style, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const titleColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    const fontFamily = fonts.medium;\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        {title && (\n          <View style={styles.titleContainer}>\n            <Text\n              numberOfLines={1}\n              style={{ color: titleColor, fontFamily, marginLeft: 16 }}\n            >\n              {title}\n            </Text>\n          </View>\n        )}\n        {children}\n        <Divider style={styles.divider} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"module"}