{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\Trip\\\\index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query GetTripForUser($userId: ID!) {\\n        trips(userId: $userId) {\\n            id,\\n            name,\\n            userId\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { Layout } from \"./Layout\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Loading } from \"../Loading\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport { useRoute } from \"@react-navigation/native\";\nvar GET_TRIPS = gql(_templateObject());\nexport var Trip = function Trip(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var params = route.params;\n\n  var _useAuth = useAuth(),\n      token = _useAuth.token;\n\n  var userId = token !== null ? token : \"\";\n\n  var _useQuery = useQuery(GET_TRIPS, {\n    variables: {\n      userId: userId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  useSetNavigationOptions(\"Trip\", true);\n\n  var handlePress = function handlePress(tripId) {\n    if (params) {\n      navigation.push(\"TripDetail\", {\n        tripId: tripId\n      });\n    } else {\n      console.log(\"Nose que va aca\");\n    }\n  };\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    });\n  } else if (error) {\n    useAlert({\n      titleError: \"Oh snap! You got an error!\",\n      errorMessage: error\n    });\n  } else {\n    return React.createElement(Layout, {\n      token: token,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/Trip/index.tsx"],"names":["React","useSetNavigationOptions","useAuth","Layout","useQuery","gql","Loading","useAlert","useRoute","GET_TRIPS","Trip","navigation","route","params","token","userId","variables","loading","error","data","handlePress","tripId","push","console","log","titleError","errorMessage"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT;AACA,SAASC,OAAT;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT;AACA,SAASC,QAAT;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,IAAMC,SAAS,GAAGJ,GAAH,mBAAf;AAUA,OAAO,IAAMK,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACpC,MAAMC,KAAS,GAAGJ,QAAQ,EAA1B;AACA,MAAMK,MAAM,GAAGD,KAAK,CAACC,MAArB;;AAFoC,iBAIlBX,OAAO,EAJW;AAAA,MAI5BY,KAJ4B,YAI5BA,KAJ4B;;AAKpC,MAAMC,MAAM,GAAGD,KAAK,KAAK,IAAV,GAAiBA,KAAjB,GAAyB,EAAxC;;AALoC,kBAMHV,QAAQ,CAACK,SAAD,EAAY;AACjDO,IAAAA,SAAS,EAAE;AAAED,MAAAA,MAAM,EAANA;AAAF;AADsC,GAAZ,CANL;AAAA,MAM5BE,OAN4B,aAM5BA,OAN4B;AAAA,MAMnBC,KANmB,aAMnBA,KANmB;AAAA,MAMZC,IANY,aAMZA,IANY;;AASpClB,EAAAA,uBAAuB,CAAC,MAAD,EAAS,IAAT,CAAvB;;AAEA,MAAMmB,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC5B,QAAGR,MAAH,EAAW;AACPF,MAAAA,UAAU,CAACW,IAAX,CAAgB,YAAhB,EAA8B;AAACD,QAAAA,MAAM,EAAEA;AAAT,OAA9B;AACH,KAFD,MAGK;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ,GAPD;;AASA,MAAIP,OAAJ,EAAc;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGK,IAAKC,KAAL,EAAa;AACdX,IAAAA,QAAQ,CAAC;AAACkB,MAAAA,UAAU,EAAE,4BAAb;AAA2CC,MAAAA,YAAY,EAAER;AAAzD,KAAD,CAAR;AACH,GAFI,MAGA;AACD,WAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEJ,KAAf;AAAsB,MAAA,IAAI,EAAEK,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CA7BM","sourcesContent":["import React from \"react\";\r\nimport { useSetNavigationOptions } from '../../hooks/useSetNavigationOptions';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { Layout } from './Layout';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Loading } from \"../Loading\";\r\nimport { useAlert } from \"../../hooks/useAlert\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\n\r\nconst GET_TRIPS = gql`\r\n    query GetTripForUser($userId: ID!) {\r\n        trips(userId: $userId) {\r\n            id,\r\n            name,\r\n            userId\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Trip = ({ navigation }) => {\r\n    const route:any = useRoute();\r\n    const params = route.params;\r\n\r\n    const { token } = useAuth();\r\n    const userId = token !== null ? token : \"\";\r\n    const { loading, error, data } = useQuery(GET_TRIPS, {\r\n        variables: { userId }\r\n    });\r\n    useSetNavigationOptions(\"Trip\", true);\r\n\r\n    const handlePress = (tripId) => {\r\n        if(params) {\r\n            navigation.push(\"TripDetail\", {tripId: tripId})\r\n        }\r\n        else {\r\n            console.log(\"Nose que va aca\");\r\n        }\r\n    }\r\n\r\n    if( loading ) {\r\n        return <Loading />\r\n    }\r\n    else if ( error ) {\r\n        useAlert({titleError: \"Oh snap! You got an error!\", errorMessage: error});\r\n    }\r\n    else {\r\n        return <Layout token={token} data={data} />\r\n    }  \r\n}"]},"metadata":{},"sourceType":"module"}