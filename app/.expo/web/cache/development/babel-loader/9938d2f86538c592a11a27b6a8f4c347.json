{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Portal\\\\PortalHost.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PortalManager from \"./PortalManager\";\nimport createReactContext from 'create-react-context';\nexport var PortalContext = createReactContext(null);\n\nvar PortalHost = function (_React$Component) {\n  _inherits(PortalHost, _React$Component);\n\n  var _super = _createSuper(PortalHost);\n\n  function PortalHost() {\n    var _this;\n\n    _classCallCheck(this, PortalHost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._setManager = function (manager) {\n      _this._manager = manager;\n    };\n\n    _this._mount = function (children) {\n      var key = _this._nextKey++;\n\n      if (_this._manager) {\n        _this._manager.mount(key, children);\n      } else {\n        _this._queue.push({\n          type: 'mount',\n          key: key,\n          children: children\n        });\n      }\n\n      return key;\n    };\n\n    _this._update = function (key, children) {\n      if (_this._manager) {\n        _this._manager.update(key, children);\n      } else {\n        var op = {\n          type: 'mount',\n          key: key,\n          children: children\n        };\n\n        var index = _this._queue.findIndex(function (o) {\n          return o.type === 'mount' || o.type === 'update' && o.key === key;\n        });\n\n        if (index > -1) {\n          _this._queue[index] = op;\n        } else {\n          _this._queue.push(op);\n        }\n      }\n    };\n\n    _this._unmount = function (key) {\n      if (_this._manager) {\n        _this._manager.unmount(key);\n      } else {\n        _this._queue.push({\n          type: 'unmount',\n          key: key\n        });\n      }\n    };\n\n    _this._nextKey = 0;\n    _this._queue = [];\n    return _this;\n  }\n\n  _createClass(PortalHost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var manager = this._manager;\n      var queue = this._queue;\n\n      while (queue.length && manager) {\n        var action = queue.pop();\n\n        switch (action.type) {\n          case 'mount':\n            manager.mount(action.key, action.children);\n            break;\n\n          case 'update':\n            manager.update(action.key, action.children);\n            break;\n\n          case 'unmount':\n            manager.unmount(action.key);\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PortalContext.Provider, {\n        value: {\n          mount: this._mount,\n          update: this._update,\n          unmount: this._unmount\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, this.props.children), React.createElement(PortalManager, {\n        ref: this._setManager,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return PortalHost;\n}(React.Component);\n\nPortalHost.displayName = 'Portal.Host';\nexport { PortalHost as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Portal/PortalHost.js"],"names":["React","PortalManager","createReactContext","PortalContext","PortalHost","_setManager","manager","_manager","_mount","children","key","_nextKey","mount","_queue","push","type","_update","update","op","index","findIndex","o","_unmount","unmount","queue","length","action","pop","styles","container","props","Component","displayName","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport PortalManager from './PortalManager';\nimport createReactContext, { type Context } from 'create-react-context';\n\ntype Props = {|\n  children: React.Node,\n|};\n\ntype Operation =\n  | { type: 'mount', key: number, children: React.Node }\n  | { type: 'update', key: number, children: React.Node }\n  | { type: 'unmount', key: number };\n\nexport type PortalMethods = {\n  mount: (children: React.Node) => number,\n  update: (key: number, children: React.Node) => void,\n  unmount: (key: number) => void,\n};\n\nexport const PortalContext: Context<PortalMethods> = createReactContext(\n  (null: any)\n);\n\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal.Host>\n *         <Text>Content of the app</Text>\n *       </Portal.Host>\n *     );\n *   }\n * }\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nexport default class PortalHost extends React.Component<Props> {\n  static displayName = 'Portal.Host';\n\n  componentDidMount() {\n    const manager = this._manager;\n    const queue = this._queue;\n\n    while (queue.length && manager) {\n      const action = queue.pop();\n\n      // eslint-disable-next-line default-case\n      switch (action.type) {\n        case 'mount':\n          manager.mount(action.key, action.children);\n          break;\n        case 'update':\n          manager.update(action.key, action.children);\n          break;\n        case 'unmount':\n          manager.unmount(action.key);\n          break;\n      }\n    }\n  }\n\n  _setManager = (manager: ?Object) => {\n    this._manager = manager;\n  };\n\n  _mount = (children: React.Node) => {\n    const key = this._nextKey++;\n\n    if (this._manager) {\n      this._manager.mount(key, children);\n    } else {\n      this._queue.push({ type: 'mount', key, children });\n    }\n\n    return key;\n  };\n\n  _update = (key: number, children: React.Node) => {\n    if (this._manager) {\n      this._manager.update(key, children);\n    } else {\n      const op = { type: 'mount', key, children };\n      const index = this._queue.findIndex(\n        o => o.type === 'mount' || (o.type === 'update' && o.key === key)\n      );\n\n      if (index > -1) {\n        /* $FlowFixMe */\n        this._queue[index] = op;\n      } else {\n        this._queue.push(op);\n      }\n    }\n  };\n\n  _unmount = (key: number) => {\n    if (this._manager) {\n      this._manager.unmount(key);\n    } else {\n      this._queue.push({ type: 'unmount', key });\n    }\n  };\n\n  _nextKey = 0;\n  _queue: Operation[] = [];\n  _manager: ?PortalManager;\n\n  render() {\n    return (\n      <PortalContext.Provider\n        value={{\n          mount: this._mount,\n          update: this._update,\n          unmount: this._unmount,\n        }}\n      >\n        {/* Need collapsable=false here to clip the elevations, otherwise they appear above Portal components */}\n        <View style={styles.container} collapsable={false}>\n          {this.props.children}\n        </View>\n        <PortalManager ref={this._setManager} />\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}