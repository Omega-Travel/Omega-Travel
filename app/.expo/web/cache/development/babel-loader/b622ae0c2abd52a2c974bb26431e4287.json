{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation register($input: RegisterInput!) {\\n    register(input: $input) {\\n      id\\n      fullname\\n      email\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { useForm } from \"../../../hooks/useForm\";\nvar REGISTER_MUTATION = gql(_templateObject());\nexport var useRegister = function useRegister() {\n  var _useMutation = useMutation(REGISTER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      register = _useMutation2[0];\n\n  var _useForm = useForm({\n    onSubmit: function onSubmit(_ref) {\n      var repeatPassword = _ref.repeatPassword,\n          values = _objectWithoutProperties(_ref, [\"repeatPassword\"]);\n\n      console.log(\"REGISTER\", values);\n      return register({\n        variables: {\n          input: values\n        }\n      }).then(function _callee(_ref2) {\n        var data, token;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = _ref2.data;\n                console.log(\"Data\", {\n                  data: data\n                });\n                token = data.register.token;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", token));\n\n              case 5:\n                return _context.abrupt(\"return\", data);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }),\n      state = _useForm.state,\n      handleChange = _useForm.handleChange,\n      handleSubmit = _useForm.handleSubmit;\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/Register/hooks/useRegister.ts"],"names":["useMutation","gql","useForm","REGISTER_MUTATION","useRegister","register","onSubmit","repeatPassword","values","console","log","variables","input","then","data","token","AsyncStorage","setItem","state","handleChange","handleSubmit"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;;AAEA,SAASC,OAAT;AAEA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;AAWA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,qBACZJ,WAAW,CAACG,iBAAD,CADC;AAAA;AAAA,MACxBE,QADwB;;AAAA,iBAEeH,OAAO,CAAC;AACpDI,IAAAA,QAAQ,EAAE,wBAAmC;AAAA,UAAhCC,cAAgC,QAAhCA,cAAgC;AAAA,UAAbC,MAAa;;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACA,aAAOH,QAAQ,CAAC;AACdM,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAEJ;AADE;AADG,OAAD,CAAR,CAIJK,IAJI,CAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,gBAAAA,IAAR,SAAQA,IAAR;AACNL,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB;AAAEI,kBAAAA,IAAI,EAAJA;AAAF,iBAApB;AACMC,gBAAAA,KAFA,GAEQD,IAAI,CAACT,QAAL,CAAcU,KAFtB;AAAA;AAAA,iDAGAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B,CAHA;;AAAA;AAAA,iDAICD,IAJD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJD,CAAP;AAUD;AAbmD,GAAD,CAFtB;AAAA,MAEvBI,KAFuB,YAEvBA,KAFuB;AAAA,MAEhBC,YAFgB,YAEhBA,YAFgB;AAAA,MAEFC,YAFE,YAEFA,YAFE;;AAiB/B,SAAO;AACLF,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,YAAY,EAAZA,YAFK;AAGLC,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKD,CAtBM","sourcesContent":["import { useMutation } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { AsyncStorage } from 'react-native';\r\nimport { useForm } from \"../../../hooks/useForm\";\r\n\r\nconst REGISTER_MUTATION = gql`\r\n  mutation register($input: RegisterInput!) {\r\n    register(input: $input) {\r\n      id\r\n      fullname\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useRegister = () => {\r\n  const [register] = useMutation(REGISTER_MUTATION);\r\n  const { state, handleChange, handleSubmit } = useForm({\r\n    onSubmit: ({ repeatPassword, ...values }) => {\r\n      console.log(\"REGISTER\", values);\r\n      return register({\r\n        variables: {\r\n          input: values,\r\n        },\r\n      }).then(async ({data}) => {\r\n        console.log(\"Data\", { data });\r\n        const token = data.register.token;\r\n        await AsyncStorage.setItem(\"token\", token);\r\n        return data;\r\n      });\r\n    },\r\n  });\r\n  return {\r\n    state,\r\n    handleChange,\r\n    handleSubmit,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}