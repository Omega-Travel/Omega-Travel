{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\App.tsx\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { Home } from \"./screens/Home\";\nimport client from \"./client\";\nvar RootStack = createStackNavigator();\nexport var AuthContext = React.createContext({\n  token: \"\",\n  setToken: function setToken(x) {\n    console.log(\"X\", x);\n  }\n});\nexport default function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isReady = _React$useState2[0],\n      setReady = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      token = _React$useState4[0],\n      _setToken = _React$useState4[1];\n\n  React.useEffect(function () {\n    AsyncStorage.getItem(\"token\").then(function (token) {\n      if (token) _setToken(token);\n    }).finally(function () {\n      return setReady(true);\n    });\n  }, []);\n  React.useEffect(function () {\n    AsyncStorage.getItem(\"token\").then(function (storedToken) {\n      if (storedToken !== token) {\n        AsyncStorage.setItem(\"token\", token);\n      }\n    });\n  }, [token]);\n  if (!isReady) return null;\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: token,\n      setToken: function setToken(x) {\n        _setToken(x);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(PaperProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(RootStack.Navigator, {\n    initialRouteName: \"Home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(RootStack.Screen, {\n    name: \"Home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  })))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/App.tsx"],"names":["React","Provider","PaperProvider","NavigationContainer","createStackNavigator","ApolloProvider","Home","client","RootStack","AuthContext","createContext","token","setToken","x","console","log","App","useState","isReady","setReady","useEffect","AsyncStorage","getItem","then","finally","storedToken","setItem","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,oBAA1C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAGA,SAASC,IAAT;AACA,OAAOC,MAAP;AAEA,IAAMC,SAAS,GAAGJ,oBAAoB,EAAtC;AAEA,OAAO,IAAMK,WAAW,GAAGT,KAAK,CAACU,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE,EADsC;AAE7CC,EAAAA,QAAQ,EAAE,kBAACC,CAAD,EAAe;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,CAAjB;AACD;AAJ4C,CAApB,CAApB;AAOP,eAAe,SAASG,GAAT,GAAe;AAAA,wBACAhB,KAAK,CAACiB,QAAN,CAAe,KAAf,CADA;AAAA;AAAA,MACrBC,OADqB;AAAA,MACZC,QADY;;AAAA,yBAEFnB,KAAK,CAACiB,QAAN,CAAuB,EAAvB,CAFE;AAAA;AAAA,MAErBN,KAFqB;AAAA,MAEdC,SAFc;;AAI5BZ,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAM;AACpBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EACGC,IADH,CACQ,UAACZ,KAAD,EAAW;AACf,UAAIA,KAAJ,EAAWC,SAAQ,CAACD,KAAD,CAAR;AACZ,KAHH,EAIGa,OAJH,CAIW;AAAA,aAAML,QAAQ,CAAC,IAAD,CAAd;AAAA,KAJX;AAKD,GAND,EAMG,EANH;AAQAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAM;AACpBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EACGC,IADH,CACQ,UAACE,WAAD,EAAiB;AACrB,UAAIA,WAAW,KAAKd,KAApB,EAA2B;AACzBU,QAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8Bf,KAA9B;AACD;AACF,KALH;AAMD,GAPD,EAOG,CAACA,KAAD,CAPH;AASA,MAAI,CAACO,OAAL,EAAc,OAAO,IAAP;AAGd,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLP,MAAAA,KAAK,EAALA,KADK;AAELC,MAAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACfD,QAAAA,SAAQ,CAACC,CAAD,CAAR;AACD;AAJI,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,SAAX;AAAqB,IAAA,gBAAgB,EAAE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaI,0CACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,SAAS,EAAED,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbJ,CADF,CADF,CADF,CARF,CADF;AAmCD;AAED,IAAMqB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, AsyncStorage } from \"react-native\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { Login } from \"./screens/Login\";\nimport { Register } from \"./screens/Register\";\nimport { Home } from \"./screens/Home\";\nimport client from \"./client\";\n\nconst RootStack = createStackNavigator();\n\nexport const AuthContext = React.createContext({\n  token: \"\",\n  setToken: (x: string) => {\n    console.log(\"X\", x);\n  },\n});\n\nexport default function App() {\n  const [isReady, setReady] = React.useState(false);\n  const [token, setToken] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    AsyncStorage.getItem(\"token\")\n      .then((token) => {\n        if (token) setToken(token);\n      })\n      .finally(() => setReady(true));\n  }, []);\n\n  React.useEffect(() => {\n    AsyncStorage.getItem(\"token\")\n      .then((storedToken) => {\n        if (storedToken !== token) {\n          AsyncStorage.setItem(\"token\", token);\n        }\n      });\n  }, [token]);\n\n  if (!isReady) return null;\n  \n  //const initialRouteName = token ? \"Home\" : \"Login\";\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        setToken: (x) => {\n          setToken(x);\n        },\n      }}\n    >\n      <ApolloProvider client={client}>\n        <PaperProvider>\n          <NavigationContainer>\n            <RootStack.Navigator initialRouteName={\"Home\"}>\n              {/* {!token ? (\n                <>\n                  <RootStack.Screen \n                    name=\"Login\" \n                    component={Login} \n                  />\n                  <RootStack.Screen\n                    name=\"Register\"\n                    component={Register}\n                  />\n                </>\n              ) : ( */}\n                <>\n                  <RootStack.Screen name=\"Home\" component={Home} />\n                </>\n              {/* )} */}\n            </RootStack.Navigator>\n          </NavigationContainer>\n        </PaperProvider>\n      </ApolloProvider>\n    </AuthContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}