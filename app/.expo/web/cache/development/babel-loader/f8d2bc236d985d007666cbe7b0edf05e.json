{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Appbar\\\\AppbarHeader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from \"./Appbar\";\nimport shadow from \"../../styles/shadow\";\nimport { withTheme } from \"../../core/theming\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"../../constants\";\n\nvar AppbarHeader = function (_React$Component) {\n  _inherits(AppbarHeader, _React$Component);\n\n  var _super = _createSuper(AppbarHeader);\n\n  function AppbarHeader() {\n    _classCallCheck(this, AppbarHeader);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppbarHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$statusBar = _this$props.statusBarHeight,\n          statusBarHeight = _this$props$statusBar === void 0 ? APPROX_STATUSBAR_HEIGHT : _this$props$statusBar,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"statusBarHeight\", \"style\"]);\n\n      var colors = rest.theme.colors;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          _ref$height = _ref.height,\n          height = _ref$height === void 0 ? DEFAULT_APPBAR_HEIGHT : _ref$height,\n          _ref$elevation = _ref.elevation,\n          elevation = _ref$elevation === void 0 ? 4 : _ref$elevation,\n          _ref$zIndex = _ref.zIndex,\n          zIndex = _ref$zIndex === void 0 ? 0 : _ref$zIndex,\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? colors.primary : _ref$backgroundColor,\n          restStyle = _objectWithoutProperties(_ref, [\"height\", \"elevation\", \"zIndex\", \"backgroundColor\"]);\n\n      var Wrapper = typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n      return React.createElement(Wrapper, {\n        style: [{\n          backgroundColor: backgroundColor,\n          zIndex: zIndex\n        }, elevation && shadow(elevation)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, React.createElement(Appbar, _extends({\n        style: [{\n          height: height,\n          backgroundColor: backgroundColor,\n          marginTop: statusBarHeight\n        }, styles.appbar, restStyle]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return AppbarHeader;\n}(React.Component);\n\nAppbarHeader.displayName = 'Appbar.Header';\nvar styles = StyleSheet.create({\n  appbar: {\n    elevation: 0\n  }\n});\nexport default withTheme(AppbarHeader);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Appbar/AppbarHeader.js"],"names":["React","Appbar","DEFAULT_APPBAR_HEIGHT","shadow","withTheme","APPROX_STATUSBAR_HEIGHT","AppbarHeader","props","statusBarHeight","style","rest","colors","theme","StyleSheet","flatten","height","elevation","zIndex","backgroundColor","primary","restStyle","Wrapper","View","SafeAreaView","marginTop","styles","appbar","Component","displayName","create"],"mappings":";;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,OAAOC,MAAP,IAAiBC,qBAAjB;AACA,OAAOC,MAAP;AACA,SAASC,SAAT;AACA,SAASC,uBAAT;;IAuEMC,Y;;;;;;;;;;;;;6BAGK;AAAA,wBAMH,KAAKC,KANF;AAAA,8CAGLC,eAHK;AAAA,UAGLA,eAHK,sCAGaH,uBAHb;AAAA,UAILI,KAJK,eAILA,KAJK;AAAA,UAKFC,IALE;;AAAA,UAQCC,MARD,GAQYD,IAAI,CAACE,KARjB,CAQCD,MARD;;AAAA,iBAeHE,UAAU,CAACC,OAAX,CAAmBL,KAAnB,KAA6B,EAf1B;AAAA,6BAULM,MAVK;AAAA,UAULA,MAVK,4BAUIb,qBAVJ;AAAA,gCAWLc,SAXK;AAAA,UAWLA,SAXK,+BAWO,CAXP;AAAA,6BAYLC,MAZK;AAAA,UAYLA,MAZK,4BAYI,CAZJ;AAAA,sCAaLC,eAbK;AAAA,UAaLA,eAbK,qCAaaP,MAAM,CAACQ,OAbpB;AAAA,UAcFC,SAdE;;AAkBP,UAAMC,OAAO,GACX,OAAO,KAAKd,KAAL,CAAWC,eAAlB,KAAsC,QAAtC,GAAiDc,IAAjD,GAAwDC,YAD1D;AAGA,aACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE,CAAC;AAAEL,UAAAA,eAAe,EAAfA,eAAF;AAAmBD,UAAAA,MAAM,EAANA;AAAnB,SAAD,EAA8BD,SAAS,IAAIb,MAAM,CAACa,SAAD,CAAjD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,CACL;AAAED,UAAAA,MAAM,EAANA,MAAF;AAAUG,UAAAA,eAAe,EAAfA,eAAV;AAA2BM,UAAAA,SAAS,EAAEhB;AAAtC,SADK,EAELiB,MAAM,CAACC,MAFF,EAGLN,SAHK;AADT,SAMMV,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF;AAeD;;;;EAvCwBV,KAAK,CAAC2B,S;;AAA3BrB,Y,CACGsB,W,GAAc,e;AAyCvB,IAAMH,MAAM,GAAGZ,UAAU,CAACgB,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNV,IAAAA,SAAS,EAAE;AADL;AADuB,CAAlB,CAAf;AAMA,eAAeZ,SAAS,CAACE,YAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, SafeAreaView, StyleSheet } from 'react-native';\n\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof Appbar> & {|\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean,\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number,\n  /**\n   * Content of the header.\n   */\n  children: React.Node,\n  /**\n   * @optional\n   */\n  theme: Theme,\n  style?: any,\n|};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   _goBack = () => console.log('Went back');\n *\n *   _onSearch = () => console.log('Searching');\n *\n *   _onMore = () => console.log('Shown more');\n *\n *   render() {\n *     return (\n *       <Appbar.Header>\n *         <Appbar.BackAction\n *           onPress={this._goBack}\n *         />\n *         <Appbar.Content\n *           title=\"Title\"\n *           subtitle=\"Subtitle\"\n *         />\n *         <Appbar.Action icon=\"search\" onPress={this._onSearch} />\n *         <Appbar.Action icon=\"more-vert\" onPress={this._onMore} />\n *       </Appbar.Header>\n *     );\n *   }\n * }\n * ```\n */\nclass AppbarHeader extends React.Component<Props> {\n  static displayName = 'Appbar.Header';\n\n  render() {\n    const {\n      // Don't use default props since we check it to know whether we should use SafeAreaView\n      statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n      style,\n      ...rest\n    } = this.props;\n\n    const { colors } = rest.theme;\n    const {\n      height = DEFAULT_APPBAR_HEIGHT,\n      elevation = 4,\n      zIndex = 0,\n      backgroundColor = colors.primary,\n      ...restStyle\n    } = StyleSheet.flatten(style) || {};\n\n    // Let the user override the behaviour\n    const Wrapper =\n      typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n\n    return (\n      <Wrapper\n        style={[{ backgroundColor, zIndex }, elevation && shadow(elevation)]}\n      >\n        {/* $FlowFixMe: There seems to be conflict between Appbar's props and Header's props */}\n        <Appbar\n          style={[\n            { height, backgroundColor, marginTop: statusBarHeight },\n            styles.appbar,\n            restStyle,\n          ]}\n          {...rest}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n"]},"metadata":{},"sourceType":"module"}