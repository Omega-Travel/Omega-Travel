{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Dialog\\\\DialogContent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar DialogContent = function (_React$Component) {\n  _inherits(DialogContent, _React$Component);\n\n  var _super = _createSuper(DialogContent);\n\n  function DialogContent() {\n    _classCallCheck(this, DialogContent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DialogContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, _extends({}, this.props, {\n        style: [styles.container, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }), this.props.children);\n    }\n  }]);\n\n  return DialogContent;\n}(React.Component);\n\nDialogContent.displayName = 'Dialog.Content';\nvar styles = StyleSheet.create({\n  container: {\n    paddingBottom: 24,\n    paddingHorizontal: 24\n  }\n});\nexport default DialogContent;","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Dialog/DialogContent.js"],"names":["React","DialogContent","props","styles","container","style","children","Component","displayName","StyleSheet","create","paddingBottom","paddingHorizontal"],"mappings":";;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;IA0CMC,a;;;;;;;;;;;;;6BAGK;AACP,aACE,oBAAC,IAAD,eAAU,KAAKC,KAAf;AAAsB,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB,KAAKF,KAAL,CAAWG,KAA9B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,KAAKH,KAAL,CAAWI,QADd,CADF;AAKD;;;;EATyBN,KAAK,CAACO,S;;AAA5BN,a,CACGO,W,GAAc,gB;AAWvB,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,aAAa,EAAE,EADN;AAETC,IAAAA,iBAAiB,EAAE;AAFV;AADoB,CAAlB,CAAf;AAOA,eAAeX,aAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\ntype Props = React.ElementConfig<typeof View> & {\n  /**\n   * Content of the `DialogContent`.\n   */\n  children: React.Node,\n  style?: any,\n};\n\n/**\n * A component to show content in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _hideDialog = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Portal>\n *         <Dialog\n *           visible={this.state.visible}\n *           onDismiss={this._hideDialog}>\n *           <Dialog.Content>\n *             <Paragraph>This is simple dialog</Paragraph>\n *           </Dialog.Content>\n *         </Dialog>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass DialogContent extends React.Component<Props> {\n  static displayName = 'Dialog.Content';\n\n  render() {\n    return (\n      <View {...this.props} style={[styles.container, this.props.style]}>\n        {this.props.children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogContent;\n"]},"metadata":{},"sourceType":"module"}