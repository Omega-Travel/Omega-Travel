{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Appbar\\\\AppbarContent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { black } from \"../../styles/colors\";\n\nvar AppbarContent = function (_React$Component) {\n  _inherits(AppbarContent, _React$Component);\n\n  var _super = _createSuper(AppbarContent);\n\n  function AppbarContent() {\n    _classCallCheck(this, AppbarContent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppbarContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$color = _this$props.color,\n          titleColor = _this$props$color === void 0 ? black : _this$props$color,\n          subtitle = _this$props.subtitle,\n          subtitleStyle = _this$props.subtitleStyle,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          titleStyle = _this$props.titleStyle,\n          theme = _this$props.theme,\n          title = _this$props.title,\n          rest = _objectWithoutProperties(_this$props, [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"style\", \"titleStyle\", \"theme\", \"title\"]);\n\n      var fonts = theme.fonts;\n      var subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(View, _extends({\n        style: [styles.container, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: [{\n          color: titleColor,\n          fontFamily: Platform.OS === 'ios' ? fonts.regular : fonts.medium\n        }, styles.title, titleStyle],\n        numberOfLines: 1,\n        accessibilityTraits: \"header\",\n        accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, title), subtitle ? React.createElement(Text, {\n        style: [styles.subtitle, {\n          color: subtitleColor\n        }, subtitleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, subtitle) : null));\n    }\n  }]);\n\n  return AppbarContent;\n}(React.Component);\n\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withTheme(AppbarContent);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Appbar/AppbarContent.js"],"names":["React","color","Text","withTheme","black","AppbarContent","props","titleColor","subtitle","subtitleStyle","onPress","style","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","styles","container","fontFamily","Platform","OS","regular","medium","Component","displayName","StyleSheet","create","flex","paddingHorizontal","fontSize"],"mappings":";;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP;AAEA,SAASC,SAAT;AACA,SAASC,KAAT;;IAuCMC,a;;;;;;;;;;;;;6BAGK;AAAA,wBAWH,KAAKC,KAXF;AAAA,0CAELL,KAFK;AAAA,UAEEM,UAFF,kCAEeH,KAFf;AAAA,UAGLI,QAHK,eAGLA,QAHK;AAAA,UAILC,aAJK,eAILA,aAJK;AAAA,UAKLC,OALK,eAKLA,OALK;AAAA,UAMLC,KANK,eAMLA,KANK;AAAA,UAOLC,UAPK,eAOLA,UAPK;AAAA,UAQLC,KARK,eAQLA,KARK;AAAA,UASLC,KATK,eASLA,KATK;AAAA,UAUFC,IAVE;;AAAA,UAYCC,KAZD,GAYWH,KAZX,CAYCG,KAZD;AAcP,UAAMC,aAAa,GAAGhB,KAAK,CAACM,UAAD,CAAL,CACnBW,KADmB,CACb,GADa,EAEnBC,GAFmB,GAGnBC,MAHmB,EAAtB;AAKA,aACE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAEV,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACW,MAAM,CAACC,SAAR,EAAmBX,KAAnB;AAAb,SAA4CI,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACL;AACEd,UAAAA,KAAK,EAAEM,UADT;AAEEgB,UAAAA,UAAU,EACRC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBT,KAAK,CAACU,OAA9B,GAAwCV,KAAK,CAACW;AAHlD,SADK,EAMLN,MAAM,CAACP,KANF,EAOLF,UAPK,CADT;AAUE,QAAA,aAAa,EAAE,CAVjB;AAWE,QAAA,mBAAmB,EAAC,QAXtB;AAYE,QAAA,iBAAiB,EACfY,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAyB,SAAzB,GAA2C,QAb/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAgBGX,KAhBH,CADF,EAmBGN,QAAQ,GACP,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CAACa,MAAM,CAACb,QAAR,EAAkB;AAAEP,UAAAA,KAAK,EAAEgB;AAAT,SAAlB,EAA4CR,aAA5C,CADT;AAEE,QAAA,aAAa,EAAE,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGD,QAJH,CADO,GAOL,IA1BN,CADF,CADF;AAgCD;;;;EAtDyBR,KAAK,CAAC4B,S;;AAA5BvB,a,CACGwB,W,GAAc,gB;AAwDvB,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,iBAAiB,EAAE;AAFV,GADoB;AAK/BnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,QAAQ,EAAEV,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;AADlC,GALwB;AAQ/BjB,EAAAA,QAAQ,EAAE;AACR0B,IAAAA,QAAQ,EAAEV,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;AAD/B;AARqB,CAAlB,CAAf;AAaA,eAAetB,SAAS,CAACE,aAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { black } from '../../styles/colors';\n\nimport type { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {|\n  /**\n   * Custom color for the text.\n   */\n  color?: string,\n  /**\n   * Text for the title.\n   */\n  title: React.Node,\n  /**\n   * Style for the title.\n   */\n  titleStyle?: any,\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.Node,\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: any,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * A component used to display a title and optional subtitle in a appbar.\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = black,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor)\n      .alpha(0.7)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            style={[\n              {\n                color: titleColor,\n                fontFamily:\n                  Platform.OS === 'ios' ? fonts.regular : fonts.medium,\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessibilityTraits=\"header\"\n            accessibilityRole={\n              Platform.OS === 'web' ? ('heading': any) : 'header'\n            }\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n"]},"metadata":{},"sourceType":"module"}