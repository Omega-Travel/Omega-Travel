{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\PlaceDetail\\\\index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        query placeById($placeId: String!) {\\n            place(id: placeId) {\\n                id,\\n                name,\\n                description,\\n                continentId,\\n                regionId,\\n                images {\\n                    id,\\n                    url\\n                },\\n                activities {\\n                    id,\\n                    name,\\n                    price\\n                },\\n                reviews {\\n                    id,\\n                    rating,\\n                    description,\\n                    userId,\\n                    user {\\n                      fullname\\n                    }\\n                }\\n            }\\n        }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport { Layout } from \"./Layout\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { Loading } from \"../Loading\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nexport var PlaceDetail = function PlaceDetail() {\n  var route = useRoute();\n  var placeId2 = route.params.id;\n  var title = route.params.name;\n  useSetNavigationOptions(title);\n  console.log(\"PlaceId\", placeId2);\n\n  var _useQuery = useQuery(gql(_templateObject()), {\n    variables: {\n      placeId: placeId2\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    });\n  } else {\n    console.log(data);\n    return React.createElement(Layout, {\n      place: data.place,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/PlaceDetail/index.tsx"],"names":["React","Layout","useRoute","useSetNavigationOptions","Loading","useQuery","gql","PlaceDetail","route","placeId2","params","id","title","name","console","log","variables","placeId","loading","error","data","place"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,uBAAT;AACA,SAASC,OAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,MAAMC,KAAS,GAAGN,QAAQ,EAA1B;AACA,MAAMO,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA9B;AACA,MAAMC,KAAK,GAAGJ,KAAK,CAACE,MAAN,CAAaG,IAA3B;AACAV,EAAAA,uBAAuB,CAACS,KAAD,CAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,QAAvB;;AAL6B,kBAOIJ,QAAQ,CACzCC,GADyC,qBA8BzC;AACIU,IAAAA,SAAS,EAAE;AAACC,MAAAA,OAAO,EAAER;AAAV;AADf,GA9ByC,CAPZ;AAAA,MAOrBS,OAPqB,aAOrBA,OAPqB;AAAA,MAOZC,KAPY,aAOZA,KAPY;AAAA,MAOLC,IAPK,aAOLA,IAPK;;AAyC7B,MAAIF,OAAJ,EAAc;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGK;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,WAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CAhDM","sourcesContent":["import * as React from \"react\";\r\nimport { Layout } from './Layout';\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\r\nimport { Loading } from \"../Loading\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nexport const PlaceDetail = () => {\r\n    const route:any = useRoute();\r\n    const placeId2 = route.params.id;\r\n    const title = route.params.name;\r\n    useSetNavigationOptions(title);\r\n    console.log(\"PlaceId\", placeId2);\r\n\r\n    const { loading, error, data } = useQuery(\r\n    gql`\r\n        query placeById($placeId: String!) {\r\n            place(id: placeId) {\r\n                id,\r\n                name,\r\n                description,\r\n                continentId,\r\n                regionId,\r\n                images {\r\n                    id,\r\n                    url\r\n                },\r\n                activities {\r\n                    id,\r\n                    name,\r\n                    price\r\n                },\r\n                reviews {\r\n                    id,\r\n                    rating,\r\n                    description,\r\n                    userId,\r\n                    user {\r\n                      fullname\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `,\r\n    {\r\n        variables: {placeId: placeId2}\r\n    });\r\n\r\n    if( loading ) {\r\n        return <Loading />\r\n    } \r\n    else {\r\n        console.log(data);\r\n        return <Layout place={data.place}/>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}