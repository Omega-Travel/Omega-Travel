{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\PlaceDetail\\\\index.tsx\";\nimport * as React from \"react\";\nimport { Layout } from \"./Layout\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { Loading } from \"../Loading\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useAlert } from \"../../hooks/useAlert\";\nimport { GET_PLACE } from \"../../utility/querys/getPlace\";\nexport var PlaceDetail = function PlaceDetail(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      token = _useAuth.token;\n\n  var route = useRoute();\n  var placeId = route.params.id;\n  var title = route.params.name;\n  var favorite = route.params.favorite;\n  useSetNavigationOptions(title, true);\n\n  var _useQuery = useQuery(GET_PLACE, {\n    variables: {\n      placeId: placeId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var handlePress = function handlePress(placeId) {\n    if (!token) {\n      useAlert({\n        titleError: \"Sorry you cant do that\",\n        errorMessage: \"You need to login to add place to trips\"\n      });\n    } else {\n      navigation.push(\"Trip\", {\n        placeId: placeId\n      });\n    }\n  };\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    });\n  } else if (error) {\n    navigation.push(\"Error\", {\n      error: error\n    });\n  } else {\n    var rating = 0;\n    data.place.reviews.map(function (review) {\n      rating += review.rating;\n    });\n    return React.createElement(Layout, {\n      favorite: favorite,\n      handlePress: handlePress,\n      navigation: navigation,\n      place: data.place,\n      rating: rating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/PlaceDetail/index.tsx"],"names":["React","Layout","useRoute","useSetNavigationOptions","Loading","useQuery","useAuth","useAlert","GET_PLACE","PlaceDetail","navigation","token","route","placeId","params","id","title","name","favorite","variables","loading","error","data","handlePress","titleError","errorMessage","push","rating","place","reviews","map","review"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,uBAAT;AACA,SAASC,OAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,OAAT;AACA,SAASC,QAAT;AACA,SAASC,SAAT;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,iBACzBJ,OAAO,EADkB;AAAA,MACnCK,KADmC,YACnCA,KADmC;;AAE3C,MAAMC,KAAS,GAAGV,QAAQ,EAA1B;AACA,MAAMW,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA7B;AACA,MAAMC,KAAK,GAAGJ,KAAK,CAACE,MAAN,CAAaG,IAA3B;AACA,MAAMC,QAAQ,GAAGN,KAAK,CAACE,MAAN,CAAaI,QAA9B;AACAf,EAAAA,uBAAuB,CAACa,KAAD,EAAQ,IAAR,CAAvB;;AAN2C,kBAQVX,QAAQ,CAACG,SAAD,EACzC;AACIW,IAAAA,SAAS,EAAE;AAAEN,MAAAA,OAAO,EAAPA;AAAF;AADf,GADyC,CARE;AAAA,MAQnCO,OARmC,aAQnCA,OARmC;AAAA,MAQ1BC,KAR0B,aAQ1BA,KAR0B;AAAA,MAQnBC,IARmB,aAQnBA,IARmB;;AAa3C,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACV,OAAD,EAAa;AAC7B,QAAG,CAACF,KAAJ,EAAW;AACRJ,MAAAA,QAAQ,CAAC;AAACiB,QAAAA,UAAU,EAAE,wBAAb;AAAuCC,QAAAA,YAAY,EAAE;AAArD,OAAD,CAAR;AACF,KAFD,MAGK;AACDf,MAAAA,UAAU,CAACgB,IAAX,CAAgB,MAAhB,EAAwB;AAACb,QAAAA,OAAO,EAAEA;AAAV,OAAxB;AACH;AACJ,GAPD;;AASA,MAAIO,OAAJ,EAAc;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGK,IAAKC,KAAL,EAAa;AACdX,IAAAA,UAAU,CAACgB,IAAX,CAAgB,OAAhB,EAAyB;AAACL,MAAAA,KAAK,EAAEA;AAAR,KAAzB;AACH,GAFI,MAGA;AACD,QAAIM,MAAM,GAAG,CAAb;AACAL,IAAAA,IAAI,CAACM,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAwB,UAAAC,MAAM,EAAI;AAC9BJ,MAAAA,MAAM,IAAII,MAAM,CAACJ,MAAjB;AACH,KAFD;AAGA,WAAO,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAET,QAAlB;AAA4B,MAAA,WAAW,EAAEK,WAAzC;AAAsD,MAAA,UAAU,EAAEb,UAAlE;AAA8E,MAAA,KAAK,EAAEY,IAAI,CAACM,KAA1F;AAAiG,MAAA,MAAM,EAAED,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CAnCM","sourcesContent":["import * as React from \"react\";\r\nimport { Layout } from './Layout';\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\r\nimport { Loading } from \"../Loading\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { useAlert } from \"../../hooks/useAlert\";\r\nimport { GET_PLACE } from \"../../utility/querys/getPlace\";\r\n\r\nexport const PlaceDetail = ({ navigation }) => {\r\n    const { token } = useAuth();\r\n    const route:any = useRoute();\r\n    const placeId = route.params.id;\r\n    const title = route.params.name;\r\n    const favorite = route.params.favorite;\r\n    useSetNavigationOptions(title, true);\r\n\r\n    const { loading, error, data } = useQuery(GET_PLACE,\r\n    {\r\n        variables: { placeId }\r\n    });\r\n\r\n    const handlePress = (placeId) => {\r\n        if(!token) {\r\n           useAlert({titleError: \"Sorry you cant do that\", errorMessage: \"You need to login to add place to trips\"}) \r\n        }\r\n        else {\r\n            navigation.push(\"Trip\", {placeId: placeId});\r\n        }\r\n    }\r\n\r\n    if( loading ) {\r\n        return <Loading />\r\n    } \r\n    else if ( error ) {\r\n        navigation.push(\"Error\", {error: error});\r\n    }\r\n    else {\r\n        let rating = 0;\r\n        data.place.reviews.map( review => {\r\n            rating += review.rating;\r\n        });\r\n        return <Layout favorite={favorite} handlePress={handlePress} navigation={navigation} place={data.place} rating={rating}/>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}