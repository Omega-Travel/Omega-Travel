{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Dialog\\\\DialogActions.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar DialogActions = function (_React$Component) {\n  _inherits(DialogActions, _React$Component);\n\n  var _super = _createSuper(DialogActions);\n\n  function DialogActions() {\n    _classCallCheck(this, DialogActions);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DialogActions, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, _extends({}, this.props, {\n        style: [styles.container, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }), React.Children.map(this.props.children, function (child) {\n        return React.isValidElement(child) ? React.cloneElement(child, {\n          compact: true\n        }) : child;\n      }));\n    }\n  }]);\n\n  return DialogActions;\n}(React.Component);\n\nDialogActions.displayName = 'Dialog.Actions';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8\n  }\n});\nexport default DialogActions;","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Dialog/DialogActions.js"],"names":["React","DialogActions","props","styles","container","style","Children","map","children","child","isValidElement","cloneElement","compact","Component","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","padding"],"mappings":";;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;IA2CMC,a;;;;;;;;;;;;;6BAGK;AACP,aACE,oBAAC,IAAD,eAAU,KAAKC,KAAf;AAAsB,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB,KAAKF,KAAL,CAAWG,KAA9B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGL,KAAK,CAACM,QAAN,CAAeC,GAAf,CACC,KAAKL,KAAL,CAAWM,QADZ,EAEC,UAAAC,KAAK;AAAA,eACHT,KAAK,CAACU,cAAN,CAAqBD,KAArB,IACIT,KAAK,CAACW,YAAN,CAAmBF,KAAnB,EAA0B;AACxBG,UAAAA,OAAO,EAAE;AADe,SAA1B,CADJ,GAIIH,KALD;AAAA,OAFN,CADH,CADF;AAaD;;;;EAjByBT,KAAK,CAACa,S;;AAA5BZ,a,CACGa,W,GAAc,gB;AAmBvB,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,UAHP;AAITC,IAAAA,OAAO,EAAE;AAJA;AADoB,CAAlB,CAAf;AASA,eAAenB,aAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ntype Props = React.ElementConfig<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.Node,\n  style?: any,\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _hideDialog = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Portal>\n *         <Dialog\n *           visible={this.state.visible}\n *           onDismiss={this._hideDialog}>\n *           <Dialog.Actions>\n *             <Button onPress={() => console.log(\"Cancel\")}>Cancel</Button>\n *             <Button onPress={() => console.log(\"Ok\")}>Ok</Button>\n *           </Dialog.Actions>\n *         </Dialog>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass DialogActions extends React.Component<Props> {\n  static displayName = 'Dialog.Actions';\n\n  render() {\n    return (\n      <View {...this.props} style={[styles.container, this.props.style]}>\n        {React.Children.map(\n          this.props.children,\n          child =>\n            React.isValidElement(child)\n              ? React.cloneElement(child, {\n                  compact: true,\n                })\n              : child\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n});\n\nexport default DialogActions;\n"]},"metadata":{},"sourceType":"module"}