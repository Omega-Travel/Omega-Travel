{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\Login\\\\index.tsx\";\nimport * as React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Layout } from \"./layout\";\nimport { useLogin } from \"./hooks/useLogin\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { useAlert } from \"../../hooks/useAlert\";\nexport var Login = function Login() {\n  var navigation = useNavigation();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      error = _React$useState4[0],\n      setError = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      errorMessage = _React$useState6[0],\n      setErrorMessage = _React$useState6[1];\n\n  var _useLogin = useLogin(),\n      state = _useLogin.state,\n      handleChange = _useLogin.handleChange,\n      handleSubmit = _useLogin.handleSubmit;\n\n  var _useAuth = useAuth(),\n      setToken = _useAuth.setToken;\n\n  useSetNavigationOptions(\"Login\");\n\n  var handlePressSubmit = function handlePressSubmit() {\n    var data, _data$login$user;\n\n    return _regeneratorRuntime.async(function handlePressSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(handleSubmit());\n\n          case 4:\n            data = _context.sent;\n            console.log(\"Handle Press\", data.login);\n\n            if (data.login.ok) {\n              setToken((_data$login$user = data.login.user) == null ? void 0 : _data$login$user.token);\n            } else {\n              console.log(\"Estoy aca\");\n              createTwoButtonAlert();\n              setErrorMessage(data.login.error);\n              setError(!data.login.ok);\n            }\n\n            setLoading(false);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            useAlert(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return React.createElement(Layout, {\n    loading: loading,\n    errorMessage: errorMessage,\n    error: error,\n    state: state,\n    handleChange: handleChange,\n    navigation: navigation,\n    handlePressSubmit: handlePressSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/Login/index.tsx"],"names":["React","useNavigation","Layout","useLogin","useAuth","useSetNavigationOptions","useAlert","Login","navigation","useState","loading","setLoading","error","setError","errorMessage","setErrorMessage","state","handleChange","handleSubmit","setToken","handlePressSubmit","data","console","log","login","ok","user","token","createTwoButtonAlert"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT;AACA,SAASC,QAAT;AACA,SAASC,OAAT;AACA,SAASC,uBAAT;AACA,SAASC,QAAT;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AACvB,MAAMC,UAAU,GAAGP,aAAa,EAAhC;;AADuB,wBAEOD,KAAK,CAACS,QAAN,CAAe,KAAf,CAFP;AAAA;AAAA,MAEhBC,OAFgB;AAAA,MAEPC,UAFO;;AAAA,yBAGGX,KAAK,CAACS,QAAN,CAAe,KAAf,CAHH;AAAA;AAAA,MAGhBG,KAHgB;AAAA,MAGTC,QAHS;;AAAA,yBAIiBb,KAAK,CAACS,QAAN,CAAe,EAAf,CAJjB;AAAA;AAAA,MAIhBK,YAJgB;AAAA,MAIFC,eAJE;;AAAA,kBAKuBZ,QAAQ,EAL/B;AAAA,MAKfa,KALe,aAKfA,KALe;AAAA,MAKRC,YALQ,aAKRA,YALQ;AAAA,MAKMC,YALN,aAKMA,YALN;;AAAA,iBAMFd,OAAO,EANL;AAAA,MAMfe,QANe,YAMfA,QANe;;AAOvBd,EAAAA,uBAAuB,CAAC,OAAD,CAAvB;;AAEA,MAAMe,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBT,YAAAA,UAAU,CAAC,IAAD,CAAV;AAFsB;AAAA,6CAIHO,YAAY,EAJT;;AAAA;AAIhBG,YAAAA,IAJgB;AAKtBC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,IAAI,CAACG,KAAjC;;AACA,gBAAGH,IAAI,CAACG,KAAL,CAAWC,EAAd,EAAiB;AACbN,cAAAA,QAAQ,qBAACE,IAAI,CAACG,KAAL,CAAWE,IAAZ,qBAAC,iBAAiBC,KAAlB,CAAR;AAEH,aAHD,MAIK;AACDL,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAK,cAAAA,oBAAoB;AACpBb,cAAAA,eAAe,CAACM,IAAI,CAACG,KAAL,CAAWZ,KAAZ,CAAf;AACAC,cAAAA,QAAQ,CAAC,CAACQ,IAAI,CAACG,KAAL,CAAWC,EAAb,CAAR;AACH;;AAEDd,YAAAA,UAAU,CAAC,KAAD,CAAV;AAjBsB;AAAA;;AAAA;AAAA;AAAA;AAoBtBL,YAAAA,QAAQ,aAAR;;AApBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAwBF,SAAO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,OAAjB;AAA0B,IAAA,YAAY,EAAEI,YAAxC;AAAsD,IAAA,KAAK,EAAEF,KAA7D;AAAoE,IAAA,KAAK,EAAEI,KAA3E;AAAkF,IAAA,YAAY,EAAEC,YAAhG;AAA8G,IAAA,UAAU,EAAET,UAA1H;AAAsI,IAAA,iBAAiB,EAAEY,iBAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAlCM","sourcesContent":["import * as React from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Layout } from './layout';\r\nimport { useLogin } from \"./hooks/useLogin\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\r\nimport { useAlert } from \"../../hooks/useAlert\";\r\n\r\nexport const Login = () => {\r\n    const navigation = useNavigation();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const { state, handleChange, handleSubmit } = useLogin();\r\n    const { setToken } = useAuth();\r\n    useSetNavigationOptions(\"Login\");\r\n\r\n    const handlePressSubmit = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const data = await handleSubmit();\r\n        console.log(\"Handle Press\", data.login);\r\n        if(data.login.ok){\r\n            setToken(data.login.user?.token);\r\n            //navigation.replace(\"Home\", { user });\r\n        }\r\n        else {\r\n            console.log(\"Estoy aca\");\r\n            createTwoButtonAlert();\r\n            setErrorMessage(data.login.error);\r\n            setError(!data.login.ok);\r\n        }\r\n\r\n        setLoading(false);\r\n      } \r\n      catch (error) {\r\n        useAlert(error);\r\n      }\r\n  };\r\n\r\n  return <Layout loading={loading} errorMessage={errorMessage} error={error} state={state} handleChange={handleChange} navigation={navigation} handlePressSubmit={handlePressSubmit} />;\r\n}"]},"metadata":{},"sourceType":"module"}