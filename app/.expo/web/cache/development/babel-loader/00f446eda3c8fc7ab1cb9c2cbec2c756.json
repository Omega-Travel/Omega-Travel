{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\Region\\\\index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  {\\n    regions {\\n      id,\\n      name,\\n      places {\\n        id,\\n        name,\\n        mainImageUrl\\n      }\\n    }\\n  }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Layout } from \"./Layout\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Loading } from \"../Loading\";\nexport var Region = function Region(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useQuery = useQuery(gql(_templateObject())),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  useSetNavigationOptions(\"Region\");\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(Layout, {\n      navigation: navigation,\n      regions: data.regions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/Region/index.tsx"],"names":["React","Layout","useSetNavigationOptions","useQuery","gql","Loading","Region","navigation","loading","error","data","regions"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AACA,SAASC,uBAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACPJ,QAAQ,CAACC,GAAD,oBADD;AAAA,MAChCI,OADgC,aAChCA,OADgC;AAAA,MACvBC,KADuB,aACvBA,KADuB;AAAA,MAChBC,IADgB,aAChBA,IADgB;;AAcxCR,EAAAA,uBAAuB,CAAC,QAAD,CAAvB;;AAEA,MAAIM,OAAJ,EAAc;AACZ,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAGK;AACH,WAAO,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAED,UAApB;AAAgC,MAAA,OAAO,EAAEG,IAAI,CAACC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAtBM","sourcesContent":["import React from \"react\";\r\nimport { Layout } from \"./Layout\";\r\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Loading } from \"../Loading\";\r\n\r\nexport const Region = ({ navigation }) => {\r\n  const { loading, error, data } = useQuery(gql`\r\n  {\r\n    regions {\r\n      id,\r\n      name,\r\n      places {\r\n        id,\r\n        name,\r\n        mainImageUrl\r\n      }\r\n    }\r\n  }`);\r\n  \r\n  useSetNavigationOptions(\"Region\");\r\n\r\n  if( loading ) {\r\n    return <Loading />\r\n  } \r\n  else {\r\n    return <Layout navigation={navigation} regions={data.regions}/>\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}