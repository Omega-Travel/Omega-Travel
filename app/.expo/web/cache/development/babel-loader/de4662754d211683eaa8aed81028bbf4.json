{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query GetTripForUser($userId: ID!) {\\n        trips(userId: $userId) {\\n            id,\\n            name,\\n            userId\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    mutation RegisterTrip($input: RegisterTrip!) {\\n        registerTrip(input: $input)\\n        {\\n            ok,\\n            error,\\n            trip {\\n                id,\\n                name,\\n                userId\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { useForm } from \"../../../hooks/useForm\";\nvar TRIP_MUTATION = gql(_templateObject());\nvar GET_TRIPS = gql(_templateObject2());\nexport var useTrip = function useTrip(_ref) {\n  var userId = _ref.userId;\n\n  var _useMutation = useMutation(TRIP_MUTATION, {\n    refetchQueries: [{\n      query: GET_TRIPS,\n      variables: {\n        userId: userId\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      newTrip = _useMutation2[0];\n\n  var _useForm = useForm({\n    onSubmit: function onSubmit(_ref2) {\n      var values = _extends({}, _ref2);\n\n      return newTrip({\n        variables: {\n          input: values\n        }\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        return data;\n      });\n    },\n    initialValues: {\n      name: '',\n      userId: userId\n    }\n  }),\n      state = _useForm.state,\n      handleChange = _useForm.handleChange,\n      handleSubmit = _useForm.handleSubmit;\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/NewTrip/hooks/tripHook.ts"],"names":["useMutation","gql","useForm","TRIP_MUTATION","GET_TRIPS","useTrip","userId","refetchQueries","query","variables","newTrip","onSubmit","values","input","then","data","initialValues","name","state","handleChange","handleSubmit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT;AAEA,IAAMC,aAAa,GAAGF,GAAH,mBAAnB;AAeA,IAAMG,SAAS,GAAGH,GAAH,oBAAf;AAUA,OAAO,IAAMI,OAAO,GAAG,SAAVA,OAAU,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,qBACjBN,WAAW,CAACG,aAAD,EAAgB;AAC3CI,IAAAA,cAAc,EAAE,CACd;AAACC,MAAAA,KAAK,EAAEJ,SAAR;AAAmBK,MAAAA,SAAS,EAAE;AAAEH,QAAAA,MAAM,EAANA;AAAF;AAA9B,KADc;AAD2B,GAAhB,CADM;AAAA;AAAA,MAC5BI,OAD4B;;AAAA,iBAMWR,OAAO,CAAC;AACpDS,IAAAA,QAAQ,EAAE,yBAAmB;AAAA,UAAbC,MAAa;;AAC3B,aAAOF,OAAO,CAAC;AACbD,QAAAA,SAAS,EAAE;AACTI,UAAAA,KAAK,EAAED;AADE;AADE,OAAD,CAAP,CAIJE,IAJI,CAIC,iBAAc;AAAA,YAAXC,IAAW,SAAXA,IAAW;AACpB,eAAOA,IAAP;AACD,OANM,CAAP;AAOD,KATmD;AAUpDC,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE,EADO;AAEbX,MAAAA,MAAM,EAAEA;AAFK;AAVqC,GAAD,CANlB;AAAA,MAM3BY,KAN2B,YAM3BA,KAN2B;AAAA,MAMpBC,YANoB,YAMpBA,YANoB;AAAA,MAMNC,YANM,YAMNA,YANM;;AAqBnC,SAAO;AACLF,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,YAAY,EAAZA,YAFK;AAGLC,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKH,CA1BM","sourcesContent":["import { useMutation } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useForm } from '../../../hooks/useForm';\r\n\r\nconst TRIP_MUTATION = gql`\r\n    mutation RegisterTrip($input: RegisterTrip!) {\r\n        registerTrip(input: $input)\r\n        {\r\n            ok,\r\n            error,\r\n            trip {\r\n                id,\r\n                name,\r\n                userId\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_TRIPS = gql`\r\n    query GetTripForUser($userId: ID!) {\r\n        trips(userId: $userId) {\r\n            id,\r\n            name,\r\n            userId\r\n        }\r\n    }\r\n`;\r\n\r\nexport const useTrip = ({ userId }) => {\r\n    const [newTrip] = useMutation(TRIP_MUTATION, {\r\n      refetchQueries: [\r\n        {query: GET_TRIPS, variables: { userId } }\r\n      ]\r\n    });\r\n    const { state, handleChange, handleSubmit } = useForm({\r\n      onSubmit: ({ ...values }) => {\r\n        return newTrip({\r\n          variables: {\r\n            input: values\r\n          },\r\n        }).then(({ data }) => {\r\n          return data;\r\n        });\r\n      },\r\n      initialValues: {\r\n        name: '',\r\n        userId: userId\r\n      }\r\n    });\r\n    return {\r\n      state,\r\n      handleChange,\r\n      handleSubmit\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}