{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\TripDetail\\\\index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query GetTripPlaces($tripId: ID!) {\\n        tripsPlaces(tripId: $tripId) {\\n            id,\\n            placeId,\\n            tripId,\\n            place {\\n                id,\\n                name,\\n                mainImageUrl\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Layout } from \"./Layout\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRoute } from '@react-navigation/native';\nimport { gql } from 'apollo-boost';\nimport { useAlert } from \"../../hooks/useAlert\";\nimport { Loading } from \"../Loading\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { useAuth } from \"../../hooks/useAuth\";\nvar GET_TRIPS_PLACE = gql(_templateObject());\nexport var TripDetail = function TripDetail(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      token = _useAuth.token;\n\n  var route = useRoute();\n  var tripId = route.params.tripId;\n  useSetNavigationOptions(\"Trip Detail\", true);\n\n  var _useQuery = useQuery(GET_TRIPS_PLACE, {\n    variables: {\n      tripId: tripId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (!token) {\n    navigation.goBack();\n  }\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    });\n  } else if (error) {\n    useAlert({\n      titleError: \"Oh snap! You got an error!\",\n      errorMessage: error\n    });\n  } else {\n    return React.createElement(Layout, {\n      tripsPlaces: data.tripsPlaces,\n      navigation: navigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/TripDetail/index.tsx"],"names":["React","Layout","useQuery","useRoute","gql","useAlert","Loading","useSetNavigationOptions","useAuth","GET_TRIPS_PLACE","TripDetail","navigation","token","route","tripId","params","variables","loading","error","data","goBack","titleError","errorMessage","tripsPlaces"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT;AACA,SAASC,OAAT;AACA,SAASC,uBAAT;AACA,SAASC,OAAT;AAEA,IAAMC,eAAe,GAAGL,GAAH,mBAArB;AAeA,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,iBACxBH,OAAO,EADiB;AAAA,MAClCI,KADkC,YAClCA,KADkC;;AAE1C,MAAMC,KAAS,GAAGV,QAAQ,EAA1B;AACA,MAAMW,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaD,MAA5B;AACAP,EAAAA,uBAAuB,CAAC,aAAD,EAAgB,IAAhB,CAAvB;;AAJ0C,kBAMTL,QAAQ,CAACO,eAAD,EAAkB;AACvDO,IAAAA,SAAS,EAAE;AAAEF,MAAAA,MAAM,EAANA;AAAF;AAD4C,GAAlB,CANC;AAAA,MAMlCG,OANkC,aAMlCA,OANkC;AAAA,MAMzBC,KANyB,aAMzBA,KANyB;AAAA,MAMlBC,IANkB,aAMlBA,IANkB;;AAU1C,MAAG,CAACP,KAAJ,EAAW;AACPD,IAAAA,UAAU,CAACS,MAAX;AACH;;AAED,MAAIH,OAAJ,EAAc;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGK,IAAKC,KAAL,EAAa;AACdb,IAAAA,QAAQ,CAAC;AAACgB,MAAAA,UAAU,EAAE,4BAAb;AAA2CC,MAAAA,YAAY,EAAEJ;AAAzD,KAAD,CAAR;AACH,GAFI,MAGA;AACD,WAAO,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAEC,IAAI,CAACI,WAA1B;AAAuC,MAAA,UAAU,EAAEZ,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CAvBM","sourcesContent":["import React from 'react';\r\nimport { Layout } from './Layout';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { gql } from 'apollo-boost';\r\nimport { useAlert } from '../../hooks/useAlert';\r\nimport { Loading } from '../Loading';\r\nimport { useSetNavigationOptions } from '../../hooks/useSetNavigationOptions';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nconst GET_TRIPS_PLACE = gql`\r\n    query GetTripPlaces($tripId: ID!) {\r\n        tripsPlaces(tripId: $tripId) {\r\n            id,\r\n            placeId,\r\n            tripId,\r\n            place {\r\n                id,\r\n                name,\r\n                mainImageUrl\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TripDetail = ({ navigation }) => {\r\n    const { token } = useAuth();\r\n    const route:any = useRoute();\r\n    const tripId = route.params.tripId;\r\n    useSetNavigationOptions(\"Trip Detail\", true);\r\n\r\n    const { loading, error, data } = useQuery(GET_TRIPS_PLACE, {\r\n        variables: { tripId }\r\n    });\r\n\r\n    if(!token) {\r\n        navigation.goBack();\r\n    }\r\n\r\n    if( loading ) {\r\n        return <Loading />\r\n    }\r\n    else if ( error ) {\r\n        useAlert({titleError: \"Oh snap! You got an error!\", errorMessage: error});\r\n    }\r\n    else {\r\n        return <Layout tripsPlaces={data.tripsPlaces} navigation={navigation} />\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}