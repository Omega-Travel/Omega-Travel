{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\core\\\\Provider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { ThemeProvider } from \"./theming\";\nimport Portal from \"../components/Portal/Portal\";\n\nvar Provider = function (_React$Component) {\n  _inherits(Provider, _React$Component);\n\n  var _super = _createSuper(Provider);\n\n  function Provider() {\n    _classCallCheck(this, Provider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Provider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Portal.Host, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return Provider;\n}(React.Component);\n\nexport { Provider as default };","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/core/Provider.js"],"names":["React","ThemeProvider","Portal","Provider","props","theme","children","Component"],"mappings":";;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT;AACA,OAAOC,MAAP;;IAQqBC,Q;;;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,QADd,CADF,CADF;AAOD;;;;EATmCN,KAAK,CAACO,S;;SAAvBJ,Q","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { ThemeProvider } from './theming';\nimport Portal from '../components/Portal/Portal';\nimport type { Theme } from '../types';\n\ntype Props = {\n  children: React.Node,\n  theme?: $Shape<Theme>,\n};\n\nexport default class Provider extends React.Component<Props> {\n  render() {\n    return (\n      <Portal.Host>\n        <ThemeProvider theme={this.props.theme}>\n          {this.props.children}\n        </ThemeProvider>\n      </Portal.Host>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}