{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Appbar\\\\Appbar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport AppbarContent from \"./AppbarContent\";\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackAction from \"./AppbarBackAction\";\nimport AppbarHeader from \"./AppbarHeader\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/colors\";\nexport var DEFAULT_APPBAR_HEIGHT = 56;\n\nvar Appbar = function (_React$Component) {\n  _inherits(Appbar, _React$Component);\n\n  var _super = _createSuper(Appbar);\n\n  function Appbar() {\n    _classCallCheck(this, Appbar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Appbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          dark = _this$props.dark,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"dark\", \"style\", \"theme\"]);\n\n      var colors = theme.colors;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? colors.primary : _ref$backgroundColor,\n          restStyle = _objectWithoutProperties(_ref, [\"backgroundColor\"]);\n\n      var isDark;\n\n      if (typeof dark === 'boolean') {\n        isDark = dark;\n      } else {\n        isDark = backgroundColor === 'transparent' ? false : !color(backgroundColor).light();\n      }\n\n      var shouldCenterContent = false;\n      var shouldAddLeftSpacing = false;\n      var shouldAddRightSpacing = false;\n\n      if (Platform.OS === 'ios') {\n        var hasAppbarContent = false;\n        var leftItemsCount = 0;\n        var rightItemsCount = 0;\n        React.Children.forEach(children, function (child) {\n          if (React.isValidElement(child)) {\n            if (child.type === AppbarContent) {\n              hasAppbarContent = true;\n            } else if (hasAppbarContent) {\n              rightItemsCount++;\n            } else {\n              leftItemsCount++;\n            }\n          }\n        });\n        shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n        shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n        shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n      }\n\n      return React.createElement(Surface, _extends({\n        style: [{\n          backgroundColor: backgroundColor\n        }, styles.appbar, restStyle]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }), shouldAddLeftSpacing ? React.createElement(View, {\n        style: styles.spacing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      }) : null, React.Children.toArray(children).filter(function (child) {\n        return child != null && typeof child !== 'boolean';\n      }).map(function (child, i) {\n        if (!React.isValidElement(child) || ![AppbarContent, AppbarAction, AppbarBackAction].includes(child.type)) {\n          return child;\n        }\n\n        var props = {\n          color: typeof child.props.color !== 'undefined' ? child.props.color : isDark ? white : black\n        };\n\n        if (child.type === AppbarContent) {\n          props.style = [i !== 0 && {\n            marginLeft: 8\n          }, shouldCenterContent && {\n            alignItems: 'center'\n          }, child.props.style];\n        }\n\n        return React.cloneElement(child, props);\n      }), shouldAddRightSpacing ? React.createElement(View, {\n        style: styles.spacing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 34\n        }\n      }) : null);\n    }\n  }]);\n\n  return Appbar;\n}(React.Component);\n\nAppbar.Content = AppbarContent;\nAppbar.Action = AppbarAction;\nAppbar.BackAction = AppbarBackAction;\nAppbar.Header = AppbarHeader;\nvar styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4\n  },\n  spacing: {\n    width: 48\n  }\n});\nexport default withTheme(Appbar);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Appbar/Appbar.js"],"names":["React","color","AppbarContent","AppbarAction","AppbarBackAction","AppbarHeader","Surface","withTheme","black","white","DEFAULT_APPBAR_HEIGHT","Appbar","props","children","dark","style","theme","rest","colors","StyleSheet","flatten","backgroundColor","primary","restStyle","isDark","light","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","styles","appbar","spacing","toArray","filter","map","i","includes","marginLeft","alignItems","cloneElement","Component","Content","Action","BackAction","Header","create","height","flexDirection","paddingHorizontal","elevation","width"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, Platform, StyleSheet } from 'react-native';\nimport color from 'color';\n\nimport AppbarContent from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport AppbarHeader from './AppbarHeader';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof View> & {|\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean,\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.Node,\n  /**\n   * @optional\n   */\n  theme: Theme,\n  style?: any,\n|};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Appbar style={styles.bottom}>\n *         <Appbar.Action icon=\"archive\" onPress={() => console.log('Pressed archive')} />\n *         <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *         <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *         <Appbar.Action icon=\"delete\" onPress={() => console.log('Pressed delete')} />\n *       </Appbar>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\nclass Appbar extends React.Component<Props> {\n  // @component ./AppbarContent.js\n  static Content = AppbarContent;\n  // @component ./AppbarAction.js\n  static Action = AppbarAction;\n  // @component ./AppbarBackAction.js\n  static BackAction = AppbarBackAction;\n  // @component ./AppbarHeader.js\n  static Header = AppbarHeader;\n\n  render() {\n    const { children, dark, style, theme, ...rest } = this.props;\n\n    const { colors } = theme;\n    const { backgroundColor = colors.primary, ...restStyle } =\n      StyleSheet.flatten(style) || {};\n\n    let isDark;\n\n    if (typeof dark === 'boolean') {\n      isDark = dark;\n    } else {\n      isDark =\n        backgroundColor === 'transparent'\n          ? false\n          : !color(backgroundColor).light();\n    }\n\n    let shouldCenterContent = false;\n    let shouldAddLeftSpacing = false;\n    let shouldAddRightSpacing = false;\n\n    if (Platform.OS === 'ios') {\n      let hasAppbarContent = false;\n      let leftItemsCount = 0;\n      let rightItemsCount = 0;\n\n      React.Children.forEach(children, child => {\n        if (React.isValidElement(child)) {\n          if (child.type === AppbarContent) {\n            hasAppbarContent = true;\n          } else if (hasAppbarContent) {\n            rightItemsCount++;\n          } else {\n            leftItemsCount++;\n          }\n        }\n      });\n\n      shouldCenterContent =\n        hasAppbarContent && (leftItemsCount < 2 && rightItemsCount < 2);\n      shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n      shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n    }\n\n    return (\n      <Surface\n        style={[{ backgroundColor }, styles.appbar, restStyle]}\n        {...rest}\n      >\n        {shouldAddLeftSpacing ? <View style={styles.spacing} /> : null}\n        {React.Children.toArray(children)\n          .filter(child => child != null && typeof child !== 'boolean')\n          .map((child, i) => {\n            if (\n              !React.isValidElement(child) ||\n              ![AppbarContent, AppbarAction, AppbarBackAction].includes(\n                child.type\n              )\n            ) {\n              return child;\n            }\n\n            const props: { color: ?string, style?: any } = {\n              color:\n                typeof child.props.color !== 'undefined'\n                  ? child.props.color\n                  : isDark\n                    ? white\n                    : black,\n            };\n\n            if (child.type === AppbarContent) {\n              props.style = [\n                // Since content is not first item, add extra left margin\n                i !== 0 && { marginLeft: 8 },\n                shouldCenterContent && { alignItems: 'center' },\n                child.props.style,\n              ];\n            }\n\n            return React.cloneElement(child, props);\n          })}\n        {shouldAddRightSpacing ? <View style={styles.spacing} /> : null}\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n});\n\nexport default withTheme(Appbar);\n"]},"metadata":{},"sourceType":"module"}