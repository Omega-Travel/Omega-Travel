{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\FAB\\\\FAB.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"../ActivityIndicator\";\nimport FABGroup from \"./FABGroup\";\nimport Surface from \"../Surface\";\nimport CrossFadeIcon from \"../CrossFadeIcon\";\nimport Text from \"../Typography/Text\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\n\nvar FAB = function (_React$Component) {\n  _inherits(FAB, _React$Component);\n\n  var _super = _createSuper(FAB);\n\n  function FAB() {\n    var _this;\n\n    _classCallCheck(this, FAB);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      visibility: new Animated.Value(_this.props.visible ? 1 : 0)\n    };\n    return _this;\n  }\n\n  _createClass(FAB, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.visible === prevProps.visible) {\n        return;\n      }\n\n      if (this.props.visible) {\n        Animated.timing(this.state.visibility, {\n          toValue: 1,\n          duration: 200,\n          useNativeDriver: true\n        }).start();\n      } else {\n        Animated.timing(this.state.visibility, {\n          toValue: 0,\n          duration: 150,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          small = _this$props.small,\n          icon = _this$props.icon,\n          label = _this$props.label,\n          _this$props$accessibi = _this$props.accessibilityLabel,\n          accessibilityLabel = _this$props$accessibi === void 0 ? label : _this$props$accessibi,\n          customColor = _this$props.color,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          visible = _this$props.visible,\n          loading = _this$props.loading,\n          rest = _objectWithoutProperties(_this$props, [\"small\", \"icon\", \"label\", \"accessibilityLabel\", \"color\", \"disabled\", \"onPress\", \"theme\", \"style\", \"visible\", \"loading\"]);\n\n      var visibility = this.state.visibility;\n      var disabledColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n\n      var _ref = StyleSheet.flatten(style) || {},\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? disabled ? disabledColor : theme.colors.accent : _ref$backgroundColor;\n\n      var foregroundColor;\n\n      if (typeof customColor !== 'undefined') {\n        foregroundColor = customColor;\n      } else if (disabled) {\n        foregroundColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n      } else {\n        foregroundColor = !color(backgroundColor).light() ? white : 'rgba(0, 0, 0, .54)';\n      }\n\n      var rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n      return React.createElement(Surface, _extends({}, rest, {\n        style: [{\n          backgroundColor: backgroundColor,\n          opacity: visibility,\n          transform: [{\n            scale: visibility\n          }]\n        }, styles.container, disabled && styles.disabled, style],\n        pointerEvents: visible ? 'auto' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }), React.createElement(TouchableRipple, {\n        borderless: true,\n        onPress: onPress,\n        rippleColor: rippleColor,\n        disabled: disabled,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        accessibilityStates: disabled ? ['disabled'] : undefined,\n        style: styles.touchable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.content, label ? styles.extended : small ? styles.small : styles.standard],\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }\n      }, icon && loading !== true ? React.createElement(CrossFadeIcon, {\n        source: icon,\n        size: 24,\n        color: foregroundColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      }) : null, loading && label ? React.createElement(ActivityIndicator, {\n        size: 18,\n        color: foregroundColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }) : null, label ? React.createElement(Text, {\n        style: [styles.label, {\n          color: foregroundColor,\n          fontFamily: theme.fonts.medium\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, label.toUpperCase()) : null)));\n    }\n  }]);\n\n  return FAB;\n}(React.Component);\n\nFAB.Group = FABGroup;\nFAB.defaultProps = {\n  visible: true\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6\n  },\n  touchable: {\n    borderRadius: 28\n  },\n  standard: {\n    height: 56,\n    width: 56\n  },\n  small: {\n    height: 40,\n    width: 40\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nexport default withTheme(FAB);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/FAB/FAB.js"],"names":["color","React","ActivityIndicator","FABGroup","Surface","CrossFadeIcon","Text","TouchableRipple","black","white","withTheme","FAB","state","visibility","Animated","Value","props","visible","prevProps","timing","toValue","duration","useNativeDriver","start","small","icon","label","accessibilityLabel","customColor","disabled","onPress","theme","style","loading","rest","disabledColor","dark","alpha","rgb","string","StyleSheet","flatten","backgroundColor","colors","accent","foregroundColor","light","rippleColor","opacity","transform","scale","styles","container","undefined","touchable","content","extended","standard","fontFamily","fonts","medium","toUpperCase","Component","Group","defaultProps","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport color from 'color';\nimport * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\nimport FABGroup from './FABGroup';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { Theme, $RemoveChildren } from '../../types';\nimport type { IconSource } from './../Icon';\n\ntype Props = $RemoveChildren<typeof Surface> & {|\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource,\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string,\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string,\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean,\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string,\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean,\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean,\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\ntype State = {\n  visibility: Animated.Value,\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"add\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nclass FAB extends React.Component<Props, State> {\n  // @component ./FABGroup.js\n  static Group = FABGroup;\n\n  static defaultProps = {\n    visible: true,\n  };\n\n  state = {\n    visibility: new Animated.Value(this.props.visible ? 1 : 0),\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.visible === prevProps.visible) {\n      return;\n    }\n\n    if (this.props.visible) {\n      Animated.timing(this.state.visibility, {\n        toValue: 1,\n        duration: 200,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(this.state.visibility, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start();\n    }\n  }\n\n  render() {\n    const {\n      small,\n      icon,\n      label,\n      accessibilityLabel = label,\n      color: customColor,\n      disabled,\n      onPress,\n      theme,\n      style,\n      visible,\n      loading,\n      ...rest\n    } = this.props;\n    const { visibility } = this.state;\n\n    const disabledColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n      StyleSheet.flatten(style) || {};\n\n    let foregroundColor;\n\n    if (typeof customColor !== 'undefined') {\n      foregroundColor = customColor;\n    } else if (disabled) {\n      foregroundColor = color(theme.dark ? white : black)\n        .alpha(0.32)\n        .rgb()\n        .string();\n    } else {\n      foregroundColor = !color(backgroundColor).light()\n        ? white\n        : 'rgba(0, 0, 0, .54)';\n    }\n\n    const rippleColor = color(foregroundColor)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    return (\n      <Surface\n        {...rest}\n        style={[\n          {\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityStates={disabled ? ['disabled'] : undefined}\n          style={styles.touchable}\n        >\n          <View\n            style={[\n              styles.content,\n              label ? styles.extended : small ? styles.small : styles.standard,\n            ]}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <CrossFadeIcon source={icon} size={24} color={foregroundColor} />\n            ) : null}\n            {loading && label ? (\n              <ActivityIndicator size={18} color={foregroundColor} />\n            ) : null}\n            {label ? (\n              <Text\n                style={[\n                  styles.label,\n                  { color: foregroundColor, fontFamily: theme.fonts.medium },\n                ]}\n              >\n                {label.toUpperCase()}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n"]},"metadata":{},"sourceType":"module"}