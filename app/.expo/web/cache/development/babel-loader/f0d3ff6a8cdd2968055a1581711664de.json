{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Card\\\\CardTitle.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nimport Caption from \"./../Typography/Caption\";\nimport Title from \"./../Typography/Title\";\nvar LEFT_SIZE = 40;\n\nvar CardTitle = function (_React$Component) {\n  _inherits(CardTitle, _React$Component);\n\n  var _super = _createSuper(CardTitle);\n\n  function CardTitle() {\n    _classCallCheck(this, CardTitle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CardTitle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          left = _this$props.left,\n          leftStyle = _this$props.leftStyle,\n          right = _this$props.right,\n          rightStyle = _this$props.rightStyle,\n          subtitle = _this$props.subtitle,\n          subtitleStyle = _this$props.subtitleStyle,\n          style = _this$props.style,\n          title = _this$props.title,\n          titleStyle = _this$props.titleStyle;\n      return React.createElement(View, {\n        style: [styles.container, {\n          height: subtitle || left || right ? 72 : 50\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, left ? React.createElement(View, {\n        style: [styles.left, leftStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, left({\n        size: LEFT_SIZE\n      })) : null, React.createElement(View, {\n        style: [styles.titles],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, title ? React.createElement(Title, {\n        style: [styles.title, {\n          marginBottom: subtitle ? 0 : 2\n        }, titleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, title) : null, subtitle ? React.createElement(Caption, {\n        style: [styles.subtitle, subtitleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, subtitle) : null), React.createElement(View, {\n        style: rightStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, right ? right({\n        size: 24\n      }) : null));\n    }\n  }]);\n\n  return CardTitle;\n}(React.Component);\n\nCardTitle.displayName = 'Card.Title';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16\n  },\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE\n  },\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: 50\n  },\n  title: {\n    minHeight: 30\n  },\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0\n  }\n});\nexport default withTheme(CardTitle);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Card/CardTitle.js"],"names":["React","withTheme","Caption","Title","LEFT_SIZE","CardTitle","props","left","leftStyle","right","rightStyle","subtitle","subtitleStyle","style","title","titleStyle","styles","container","height","size","titles","marginBottom","Component","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingLeft","marginRight","width","flex","minHeight","marginVertical"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport Caption from './../Typography/Caption';\nimport Title from './../Typography/Title';\nimport type { Theme } from '../../types';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = React.ElementConfig<typeof View> & {|\n  /**\n   * Text for the title. Note that this will only accept a string or `<Text>`-based node.\n   */\n  title: React.Node,\n  /**\n   * Style for the title.\n   */\n  titleStyle?: any,\n  /**\n   * Text for the subtitle. Note that this will only accept a string or `<Text>`-based node.\n   */\n  subtitle?: React.Node,\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: any,\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { size: number }) => React.Node,\n  /**\n   * Style for the left element wrapper.\n   */\n  leftStyle?: ViewStyleProp,\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { size: number }) => React.Node,\n  /**\n   * Style for the right element wrapper.\n   */\n  rightStyle?: ViewStyleProp,\n  /**\n   * @internal\n   */\n  index?: number,\n  /**\n   * @internal\n   */\n  total?: number,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\nconst LEFT_SIZE = 40;\n\n/**\n * A component to show a title, subtitle and an avatar inside a Card.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-title-1.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Card, IconButton } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card.Title\n *     title=\"Card Title\"\n *     subtitle=\"Card Subtitle\"\n *     left={(props) => <Avatar.Icon {...props} icon=\"folder\" />}\n *     right={(props) => <IconButton {...props} icon=\"more-vert\" onPress={() => {}} />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass CardTitle extends React.Component<Props> {\n  static displayName = 'Card.Title';\n\n  render() {\n    const {\n      left,\n      leftStyle,\n      right,\n      rightStyle,\n      subtitle,\n      subtitleStyle,\n      style,\n      title,\n      titleStyle,\n    } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { height: subtitle || left || right ? 72 : 50 },\n          style,\n        ]}\n      >\n        {left ? (\n          <View style={[styles.left, leftStyle]}>\n            {left({\n              size: LEFT_SIZE,\n            })}\n          </View>\n        ) : null}\n\n        <View style={[styles.titles]}>\n          {title ? (\n            <Title\n              style={[\n                styles.title,\n                { marginBottom: subtitle ? 0 : 2 },\n                titleStyle,\n              ]}\n              numberOfLines={1}\n            >\n              {title}\n            </Title>\n          ) : null}\n\n          {subtitle ? (\n            <Caption style={[styles.subtitle, subtitleStyle]} numberOfLines={1}>\n              {subtitle}\n            </Caption>\n          ) : null}\n        </View>\n\n        <View style={rightStyle}>{right ? right({ size: 24 }) : null}</View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16,\n  },\n\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE,\n  },\n\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: 50,\n  },\n\n  title: {\n    minHeight: 30,\n  },\n\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n  },\n});\n\nexport default withTheme(CardTitle);\n"]},"metadata":{},"sourceType":"module"}