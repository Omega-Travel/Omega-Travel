{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\DataTable\\\\DataTablePagination.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport IconButton from \"../IconButton\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTablePagination = function (_React$Component) {\n  _inherits(DataTablePagination, _React$Component);\n\n  var _super = _createSuper(DataTablePagination);\n\n  function DataTablePagination() {\n    _classCallCheck(this, DataTablePagination);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DataTablePagination, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          page = _this$props.page,\n          numberOfPages = _this$props.numberOfPages,\n          onPageChange = _this$props.onPageChange,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"label\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\"]);\n\n      var labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      return React.createElement(View, _extends({}, rest, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: [styles.label, {\n          color: labelColor\n        }],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, label), React.createElement(IconButton, {\n        icon: \"chevron-left\",\n        color: theme.colors.text,\n        disabled: page === 0,\n        onPress: function onPress() {\n          return onPageChange(page - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), React.createElement(IconButton, {\n        icon: \"chevron-right\",\n        color: theme.colors.text,\n        disabled: page === numberOfPages - 1,\n        onPress: function onPress() {\n          return onPageChange(page + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return DataTablePagination;\n}(React.Component);\n\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 44\n  }\n});\nexport default withTheme(DataTablePagination);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/DataTable/DataTablePagination.js"],"names":["React","color","IconButton","Text","withTheme","DataTablePagination","props","label","page","numberOfPages","onPageChange","style","theme","rest","labelColor","colors","text","alpha","rgb","string","styles","container","Component","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","fontSize","marginRight"],"mappings":";;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;;IA2BMC,mB;;;;;;;;;;;;;6BAGK;AAAA,wBASH,KAAKC,KATF;AAAA,UAELC,KAFK,eAELA,KAFK;AAAA,UAGLC,IAHK,eAGLA,IAHK;AAAA,UAILC,aAJK,eAILA,aAJK;AAAA,UAKLC,YALK,eAKLA,YALK;AAAA,UAMLC,KANK,eAMLA,KANK;AAAA,UAOLC,KAPK,eAOLA,KAPK;AAAA,UAQFC,IARE;;AAUP,UAAMC,UAAU,GAAGb,KAAK,CAACW,KAAK,CAACG,MAAN,CAAaC,IAAd,CAAL,CAChBC,KADgB,CACV,GADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAAnB;AAKA,aACE,oBAAC,IAAD,eAAUN,IAAV;AAAgB,QAAA,KAAK,EAAE,CAACO,MAAM,CAACC,SAAR,EAAmBV,KAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACS,MAAM,CAACb,KAAR,EAAe;AAAEN,UAAAA,KAAK,EAAEa;AAAT,SAAf,CAAb;AAAoD,QAAA,aAAa,EAAE,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,KADH,CADF,EAIE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,KAAK,EAAEK,KAAK,CAACG,MAAN,CAAaC,IAFtB;AAGE,QAAA,QAAQ,EAAER,IAAI,KAAK,CAHrB;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAME,YAAY,CAACF,IAAI,GAAG,CAAR,CAAlB;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAUE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,KAAK,EAAEI,KAAK,CAACG,MAAN,CAAaC,IAFtB;AAGE,QAAA,QAAQ,EAAER,IAAI,KAAKC,aAAa,GAAG,CAHrC;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMC,YAAY,CAACF,IAAI,GAAG,CAAR,CAAlB;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAmBD;;;;EArC+BR,KAAK,CAACsB,S;;AAAlCjB,mB,CACGkB,W,GAAc,sB;AAuCvB,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,cAAc,EAAE,UADP;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,WAAW,EAAE;AAJJ,GADoB;AAQ/BtB,EAAAA,KAAK,EAAE;AACLuB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,WAAW,EAAE;AAFR;AARwB,CAAlB,CAAf;AAcA,eAAe3B,SAAS,CAACC,mBAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = React.ElementConfig<typeof View> & {|\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number,\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number,\n  /**\n   * Label text to display\n   */\n  label?: React.Node,\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: number => void,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\nclass DataTablePagination extends React.Component<Props> {\n  static displayName = 'DataTable.Pagination';\n\n  render() {\n    const {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const labelColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n          {label}\n        </Text>\n        <IconButton\n          icon=\"chevron-left\"\n          color={theme.colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(page - 1)}\n        />\n        <IconButton\n          icon=\"chevron-right\"\n          color={theme.colors.text}\n          disabled={page === numberOfPages - 1}\n          onPress={() => onPageChange(page + 1)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n"]},"metadata":{},"sourceType":"module"}