{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\DataTable\\\\DataTableCell.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport TouchableRipple from \"../TouchableRipple\";\n\nvar DataTableCell = function (_React$Component) {\n  _inherits(DataTableCell, _React$Component);\n\n  var _super = _createSuper(DataTableCell);\n\n  function DataTableCell() {\n    _classCallCheck(this, DataTableCell);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DataTableCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          numeric = _this$props.numeric,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"style\", \"numeric\"]);\n\n      return React.createElement(TouchableRipple, _extends({}, rest, {\n        style: [styles.container, numeric && styles.right, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, children));\n    }\n  }]);\n\n  return DataTableCell;\n}(React.Component);\n\nDataTableCell.displayName = 'DataTable.Cell';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/DataTable/DataTableCell.js"],"names":["React","Text","TouchableRipple","DataTableCell","props","children","style","numeric","rest","styles","container","right","Component","displayName","StyleSheet","create","flex","flexDirection","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,IAAP;AACA,OAAOC,eAAP;;IAmBMC,a;;;;;;;;;;;;;6BAGK;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAAA,UACkBC,OADlB,eACkBA,OADlB;AAAA,UAC8BC,IAD9B;;AAGP,aACE,oBAAC,eAAD,eACMA,IADN;AAEE,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBH,OAAO,IAAIE,MAAM,CAACE,KAArC,EAA4CL,KAA5C,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBD,QAAzB,CAJF,CADF;AAQD;;;;EAdyBL,KAAK,CAACY,S;;AAA5BT,a,CACGU,W,GAAc,gB;AAgBvB,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAO/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,cAAc,EAAE;AADX;AAPwB,CAAlB,CAAf;AAYA,eAAehB,aAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {|\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.Node,\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n|};\n\nclass DataTableCell extends React.Component<Props> {\n  static displayName = 'DataTable.Cell';\n\n  render() {\n    const { children, style, numeric, ...rest } = this.props;\n\n    return (\n      <TouchableRipple\n        {...rest}\n        style={[styles.container, numeric && styles.right, style]}\n      >\n        <Text numberOfLines={1}>{children}</Text>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"]},"metadata":{},"sourceType":"module"}