{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Portal\\\\Portal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PortalConsumer from \"./PortalConsumer\";\nimport PortalHost, { PortalContext } from \"./PortalHost\";\nimport { ThemeProvider, withTheme } from \"../../core/theming\";\n\nvar Portal = function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  var _super = _createSuper(Portal);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Portal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          theme = _this$props.theme;\n      return React.createElement(PortalContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, function (manager) {\n        return React.createElement(PortalConsumer, {\n          manager: manager,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        }, React.createElement(ThemeProvider, {\n          theme: theme,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }, children));\n      });\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\nPortal.Host = PortalHost;\nexport default withTheme(Portal);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Portal/Portal.js"],"names":["React","PortalConsumer","PortalHost","PortalContext","ThemeProvider","withTheme","Portal","props","children","theme","manager","Component","Host"],"mappings":";;;;;;;;;;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP,IAAqBC,aAArB;AACA,SAASC,aAAT,EAAwBC,SAAxB;;IAmCMC,M;;;;;;;;;;;;;6BAIK;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAGP,aACE,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAC,OAAO;AAAA,eACN,oBAAC,cAAD;AAAgB,UAAA,OAAO,EAAEA,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,aAAD;AAAe,UAAA,KAAK,EAAED,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BD,QAA9B,CADF,CADM;AAAA,OADV,CADF;AASD;;;;EAhBkBR,KAAK,CAACW,S;;AAArBL,M,CAEGM,I,GAAOV,U;AAiBhB,eAAeG,SAAS,CAACC,MAAD,CAAxB","sourcesContent":["/* @flow */\n/* eslint-disable react/no-unused-prop-types */\n\nimport * as React from 'react';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext } from './PortalHost';\nimport { ThemeProvider, withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\ntype Props = {|\n  /**\n   * Content of the `Portal`.\n   */\n  children: React.Node,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal>\n *         <Text>This is rendered at a different place</Text>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass Portal extends React.Component<Props> {\n  // @component ./PortalHost.js\n  static Host = PortalHost;\n\n  render() {\n    const { children, theme } = this.props;\n\n    return (\n      <PortalContext.Consumer>\n        {manager => (\n          <PortalConsumer manager={manager}>\n            <ThemeProvider theme={theme}>{children}</ThemeProvider>\n          </PortalConsumer>\n        )}\n      </PortalContext.Consumer>\n    );\n  }\n}\n\nexport default withTheme(Portal);\n"]},"metadata":{},"sourceType":"module"}