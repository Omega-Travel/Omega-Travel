{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Modal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport Surface from \"./Surface\";\nimport { withTheme } from \"../core/theming\";\n\nvar Modal = function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal() {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      opacity: new Animated.Value(_this.props.visible ? 1 : 0),\n      rendered: _this.props.visible\n    };\n\n    _this._handleBack = function () {\n      if (_this.props.dismissable) {\n        _this._hideModal();\n      }\n\n      return true;\n    };\n\n    _this._showModal = function () {\n      BackHandler.removeEventListener('hardwareBackPress', _this._handleBack);\n      BackHandler.addEventListener('hardwareBackPress', _this._handleBack);\n      Animated.timing(_this.state.opacity, {\n        toValue: 1,\n        duration: 280,\n        easing: Easing.ease,\n        useNativeDriver: true\n      }).start();\n    };\n\n    _this._hideModal = function () {\n      BackHandler.removeEventListener('hardwareBackPress', _this._handleBack);\n      Animated.timing(_this.state.opacity, {\n        toValue: 0,\n        duration: 280,\n        easing: Easing.ease,\n        useNativeDriver: true\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (!finished) {\n          return;\n        }\n\n        if (_this.props.visible && _this.props.onDismiss) {\n          _this.props.onDismiss();\n        }\n\n        if (_this.props.visible) {\n          _this._showModal();\n        } else {\n          _this.setState({\n            rendered: false\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        if (this.props.visible) {\n          this._showModal();\n        } else {\n          this._hideModal();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener('hardwareBackPress', this._handleBack);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.rendered) return null;\n      var _this$props = this.props,\n          children = _this$props.children,\n          dismissable = _this$props.dismissable,\n          theme = _this$props.theme,\n          contentContainerStyle = _this$props.contentContainerStyle;\n      var colors = theme.colors;\n      return React.createElement(Animated.View, {\n        accessibilityViewIsModal: true,\n        accessibilityLiveRegion: \"polite\",\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: dismissable ? this._hideModal : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.backdrop, {\n          backgroundColor: colors.backdrop,\n          opacity: this.state.opacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: styles.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, React.createElement(Surface, {\n        style: [{\n          opacity: this.state.opacity\n        }, styles.content, contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, children)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\nModal.defaultProps = {\n  dismissable: true,\n  visible: false\n};\npolyfill(Modal);\nexport default withTheme(Modal);\nvar styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Modal.js"],"names":["React","polyfill","Surface","withTheme","Modal","state","opacity","Animated","Value","props","visible","rendered","_handleBack","dismissable","_hideModal","_showModal","BackHandler","removeEventListener","addEventListener","timing","toValue","duration","easing","Easing","ease","useNativeDriver","start","finished","onDismiss","setState","prevProps","children","theme","contentContainerStyle","colors","StyleSheet","absoluteFill","undefined","styles","backdrop","backgroundColor","wrapper","content","nextProps","prevState","Component","defaultProps","create","flex","absoluteFillObject","justifyContent"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  Animated,\n  View,\n  Easing,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  BackHandler,\n} from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types';\n\ntype Props = {|\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean,\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => mixed,\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean,\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.Node,\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\ntype State = {\n  opacity: Animated.Value,\n  rendered: boolean,\n};\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _showModal = () => this.setState({ visible: true });\n *   _hideModal = () => this.setState({ visible: false });\n *\n *   render() {\n *     const { visible } = this.state;\n *     return (\n *      <Provider>\n *        <Portal>\n *          <Modal visible={visible} onDismiss={this._hideModal}>\n *            <Text>Example Modal</Text>\n *          </Modal>\n *          <Button\n *            style={{ marginTop: 30 }}\n *            onPress={this._showModal}\n *          >\n *            Show\n *          </Button>\n *        </Portal>\n *      </Provider>\n *     );\n *   }\n * }\n * ```\n */\n\nclass Modal extends React.Component<Props, State> {\n  static defaultProps = {\n    dismissable: true,\n    visible: false,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return {\n        rendered: true,\n      };\n    }\n\n    return null;\n  }\n\n  state = {\n    opacity: new Animated.Value(this.props.visible ? 1 : 0),\n    rendered: this.props.visible,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      if (this.props.visible) {\n        this._showModal();\n      } else {\n        this._hideModal();\n      }\n    }\n  }\n\n  _handleBack = () => {\n    if (this.props.dismissable) {\n      this._hideModal();\n    }\n    return true;\n  };\n\n  _showModal = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this._handleBack);\n    BackHandler.addEventListener('hardwareBackPress', this._handleBack);\n    Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration: 280,\n      easing: Easing.ease,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  _hideModal = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this._handleBack);\n    Animated.timing(this.state.opacity, {\n      toValue: 0,\n      duration: 280,\n      easing: Easing.ease,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n      if (this.props.visible && this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n      if (this.props.visible) {\n        this._showModal();\n      } else {\n        this.setState({\n          rendered: false,\n        });\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this._handleBack);\n  }\n\n  render() {\n    if (!this.state.rendered) return null;\n\n    const { children, dismissable, theme, contentContainerStyle } = this.props;\n    const { colors } = theme;\n    return (\n      <Animated.View\n        accessibilityViewIsModal\n        accessibilityLiveRegion=\"polite\"\n        style={StyleSheet.absoluteFill}\n      >\n        <TouchableWithoutFeedback\n          onPress={dismissable ? this._hideModal : undefined}\n        >\n          <Animated.View\n            style={[\n              styles.backdrop,\n              { backgroundColor: colors.backdrop, opacity: this.state.opacity },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <View pointerEvents=\"box-none\" style={styles.wrapper}>\n          <Surface\n            style={[\n              { opacity: this.state.opacity },\n              styles.content,\n              contentContainerStyle,\n            ]}\n          >\n            {children}\n          </Surface>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\npolyfill(Modal);\n\nexport default withTheme(Modal);\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}