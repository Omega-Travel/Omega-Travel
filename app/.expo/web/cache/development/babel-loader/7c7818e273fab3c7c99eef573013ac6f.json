{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nexport var useForm = function useForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(key) {\n    return function (value) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, key, value)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", onSubmit(state));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/hooks/useForm.ts"],"names":["React","useForm","onSubmit","useState","state","setState","handleChange","key","value","handleSubmit"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBACXF,KAAK,CAACG,QAAN,CAAe,EAAf,CADW;AAAA;AAAA,MAC9BC,KAD8B;AAAA,MACvBC,QADuB;;AAErC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD;AAAA,WAAS,UAACC,KAAD,EAAW;AACvCH,MAAAA,QAAQ,iCACHD,KADG,2BAELG,GAFK,EAECC,KAFD,GAAR;AAID,KALoB;AAAA,GAArB;;AAOA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA,6CACZP,QAAQ,CAACE,KAAD,CADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAIA,SAAO;AACLA,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,YAAY,EAAZA,YAFK;AAGLG,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKH,CAlBM","sourcesContent":["import * as React from \"react\";\r\n\r\nexport const useForm = ({ onSubmit }) => {\r\n    const [state, setState] = React.useState({});\r\n    const handleChange = (key) => (value) => {\r\n      setState({\r\n        ...state,\r\n        [key]: value,\r\n      });\r\n    };\r\n  \r\n    const handleSubmit = async () => {\r\n      return onSubmit(state);\r\n    };\r\n  \r\n    return {\r\n      state,\r\n      handleChange,\r\n      handleSubmit,\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}