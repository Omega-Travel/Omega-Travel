{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Appbar\\\\AppbarBackAction.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppbarAction from \"./AppbarAction\";\n\nvar AppbarBackAction = function (_React$Component) {\n  _inherits(AppbarBackAction, _React$Component);\n\n  var _super = _createSuper(AppbarBackAction);\n\n  function AppbarBackAction() {\n    _classCallCheck(this, AppbarBackAction);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppbarBackAction, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppbarAction, _extends({}, this.props, {\n        icon: Platform.OS === 'ios' ? function (_ref) {\n          var size = _ref.size,\n              color = _ref.color;\n          return React.createElement(View, {\n            style: [styles.wrapper, {\n              width: size,\n              height: size,\n              transform: [{\n                scaleX: I18nManager.isRTL ? -1 : 1\n              }]\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }\n          }, React.createElement(Image, {\n            source: require(\"../../assets/back-chevron.png\"),\n            style: [styles.icon, {\n              tintColor: color\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }\n          }));\n        } : {\n          source: 'arrow-back',\n          direction: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return AppbarBackAction;\n}(React.Component);\n\nAppbarBackAction.displayName = 'Appbar.BackAction';\nAppbarBackAction.defaultProps = {\n  accessibilityLabel: 'Back'\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain'\n  }\n});\nexport default AppbarBackAction;","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Appbar/AppbarBackAction.js"],"names":["React","AppbarAction","AppbarBackAction","props","Platform","OS","size","color","styles","wrapper","width","height","transform","scaleX","I18nManager","isRTL","require","icon","tintColor","source","direction","Component","displayName","defaultProps","accessibilityLabel","StyleSheet","create","alignItems","justifyContent","resizeMode"],"mappings":";;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAGA,OAAOC,YAAP;;IA6BMC,gB;;;;;;;;;;;;;6BAOK;AACP,aACE,oBAAC,YAAD,eACM,KAAKC,KADX;AAEE,QAAA,IAAI,EACFC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACI;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,cAASC,KAAT,QAASA,KAAT;AAAA,iBACE,oBAAC,IAAD;AACE,YAAA,KAAK,EAAE,CACLC,MAAM,CAACC,OADF,EAEL;AACEC,cAAAA,KAAK,EAAEJ,IADT;AAEEK,cAAAA,MAAM,EAAEL,IAFV;AAGEM,cAAAA,SAAS,EAAE,CAAC;AAAEC,gBAAAA,MAAM,EAAEC,WAAW,CAACC,KAAZ,GAAoB,CAAC,CAArB,GAAyB;AAAnC,eAAD;AAHb,aAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAUE,oBAAC,KAAD;AACE,YAAA,MAAM,EAAEC,OAAO,iCADjB;AAEE,YAAA,KAAK,EAAE,CAACR,MAAM,CAACS,IAAR,EAAc;AAAEC,cAAAA,SAAS,EAAEX;AAAb,aAAd,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,CADF;AAAA,SADJ,GAkBI;AAAEY,UAAAA,MAAM,EAAE,YAAV;AAAwBC,UAAAA,SAAS,EAAE;AAAnC,SArBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AA0BD;;;;EAlC4BpB,KAAK,CAACqB,S;;AAA/BnB,gB,CACGoB,W,GAAc,mB;AADjBpB,gB,CAGGqB,Y,GAAe;AACpBC,EAAAA,kBAAkB,EAAE;AADA,C;AAkCxB,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,OAAO,EAAE;AACPkB,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE;AAFT,GADsB;AAK/BX,EAAAA,IAAI,EAAE;AACJN,IAAAA,MAAM,EAAE,EADJ;AAEJD,IAAAA,KAAK,EAAE,EAFH;AAGJmB,IAAAA,UAAU,EAAE;AAHR;AALyB,CAAlB,CAAf;AAYA,eAAe3B,gBAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, Image, I18nManager, StyleSheet, Platform } from 'react-native';\n\nimport AppbarAction from './AppbarAction';\n\ntype Props = React.ElementConfig<typeof AppbarAction> & {|\n  /**\n   *  Custom color for back icon.\n   */\n  color?: string,\n  /**\n   * Optional icon size.\n   */\n  size?: number,\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean,\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  style?: any,\n|};\n\n/**\n * A component used to display a back button in the appbar.\n */\nclass AppbarBackAction extends React.Component<Props> {\n  static displayName = 'Appbar.BackAction';\n\n  static defaultProps = {\n    accessibilityLabel: 'Back',\n  };\n\n  render() {\n    return (\n      <AppbarAction\n        {...this.props}\n        icon={\n          Platform.OS === 'ios'\n            ? ({ size, color }) => (\n                <View\n                  style={[\n                    styles.wrapper,\n                    {\n                      width: size,\n                      height: size,\n                      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n                    },\n                  ]}\n                >\n                  <Image\n                    source={require('../../assets/back-chevron.png')}\n                    style={[styles.icon, { tintColor: color }]}\n                  />\n                </View>\n              )\n            : { source: 'arrow-back', direction: 'auto' }\n        }\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain',\n  },\n});\n\nexport default AppbarBackAction;\n"]},"metadata":{},"sourceType":"module"}