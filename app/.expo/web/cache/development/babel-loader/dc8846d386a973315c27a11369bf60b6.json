{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\List\\\\ListIcon.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"../Icon\";\n\nvar ListIcon = function (_React$Component) {\n  _inherits(ListIcon, _React$Component);\n\n  var _super = _createSuper(ListIcon);\n\n  function ListIcon() {\n    _classCallCheck(this, ListIcon);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ListIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          iconColor = _this$props.color,\n          style = _this$props.style;\n      return React.createElement(View, {\n        style: [styles.item, style],\n        pointerEvents: \"box-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(Icon, {\n        source: icon,\n        size: 24,\n        color: iconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ListIcon;\n}(React.Component);\n\nListIcon.displayName = 'List.Icon';\nexport { ListIcon as default };\nvar styles = StyleSheet.create({\n  item: {\n    margin: 8,\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/List/ListIcon.js"],"names":["React","Icon","ListIcon","props","icon","iconColor","color","style","styles","item","Component","displayName","StyleSheet","create","margin","height","width","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,IAAP;;IA6BqBC,Q;;;;;;;;;;;;;6BAGV;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACcC,SADd,eACOC,KADP;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAGP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAcF,KAAd,CAAb;AAAmC,QAAA,aAAa,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAEH,IAAd;AAAoB,QAAA,IAAI,EAAE,EAA1B;AAA8B,QAAA,KAAK,EAAEC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAXmCL,KAAK,CAACU,S;;AAAvBR,Q,CACZS,W,GAAc,W;SADFT,Q;AAcrB,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,cAAc,EAAE;AALZ;AADyB,CAAlB,CAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Icon, { type IconSource } from '../Icon';\n\ntype Props = {|\n  /**\n   * Icon to show.\n   */\n  icon: IconSource,\n  /**\n   * Color for the icon.\n   */\n  color: string,\n  style?: any,\n|};\n\n/**\n * A component to show an icon in a list item.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Icon color={Colors.blue500} icon=\"folder\" />\n * );\n *\n * export default MyComponent;\n * ```\n */\nexport default class ListIcon extends React.Component<Props> {\n  static displayName = 'List.Icon';\n\n  render() {\n    const { icon, color: iconColor, style } = this.props;\n\n    return (\n      <View style={[styles.item, style]} pointerEvents=\"box-none\">\n        <Icon source={icon} size={24} color={iconColor} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    margin: 8,\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}