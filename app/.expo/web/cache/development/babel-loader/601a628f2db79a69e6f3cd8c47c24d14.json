{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useForm } from \"../../../../../hooks/useForm\";\nimport { GET_PLACE } from \"../../../../../utility/querys/getPlace\";\nimport { REVIEW_MUTATION } from \"../../../../../utility/mutations/addReview\";\nexport var useReview = function useReview(_ref) {\n  var placeId = _ref.placeId,\n      userId = _ref.userId;\n\n  var _useMutation = useMutation(REVIEW_MUTATION, {\n    refetchQueries: [{\n      query: GET_PLACE,\n      variables: {\n        placeId: placeId\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addReview = _useMutation2[0];\n\n  var _useForm = useForm({\n    onSubmit: function onSubmit(_ref2) {\n      var values = _extends({}, _ref2);\n\n      console.log(\"Valores\", values);\n      return addReview({\n        variables: {\n          input: values\n        }\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        return data;\n      });\n    },\n    initialValues: {\n      rating: 0,\n      placeId: placeId,\n      userId: userId,\n      description: ''\n    }\n  }),\n      state = _useForm.state,\n      handleChange = _useForm.handleChange,\n      handleSubmit = _useForm.handleSubmit;\n\n  return {\n    state: state,\n    handleChange: handleChange,\n    handleSubmit: handleSubmit\n  };\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/PlaceDetail/PlaceReviews/AddReview/hooks/useReview.ts"],"names":["useMutation","useForm","GET_PLACE","REVIEW_MUTATION","useReview","placeId","userId","refetchQueries","query","variables","addReview","onSubmit","values","console","log","input","then","data","initialValues","rating","description","state","handleChange","handleSubmit"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,OAAT;AACA,SAASC,SAAT;AACA,SAASC,eAAT;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,qBAC1BN,WAAW,CAACG,eAAD,EAAkB;AAC/CI,IAAAA,cAAc,EAAE,CACd;AAACC,MAAAA,KAAK,EAAEN,SAAR;AAAmBO,MAAAA,SAAS,EAAE;AAACJ,QAAAA,OAAO,EAAPA;AAAD;AAA9B,KADc;AAD+B,GAAlB,CADe;AAAA;AAAA,MACvCK,SADuC;;AAAA,iBAMAT,OAAO,CAAC;AACpDU,IAAAA,QAAQ,EAAE,yBAAmB;AAAA,UAAbC,MAAa;;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,aAAOF,SAAS,CAAC;AACbD,QAAAA,SAAS,EAAE;AACPM,UAAAA,KAAK,EAAEH;AADA;AADE,OAAD,CAAT,CAIJI,IAJI,CAIC,iBAAc;AAAA,YAAXC,IAAW,SAAXA,IAAW;AAClB,eAAOA,IAAP;AACH,OANM,CAAP;AAOD,KAVmD;AAWpDC,IAAAA,aAAa,EAAE;AACbC,MAAAA,MAAM,EAAE,CADK;AAEbd,MAAAA,OAAO,EAAEA,OAFI;AAGbC,MAAAA,MAAM,EAAEA,MAHK;AAIbc,MAAAA,WAAW,EAAE;AAJA;AAXqC,GAAD,CANP;AAAA,MAMtCC,KANsC,YAMtCA,KANsC;AAAA,MAM/BC,YAN+B,YAM/BA,YAN+B;AAAA,MAMjBC,YANiB,YAMjBA,YANiB;;AAwB9C,SAAO;AACLF,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,YAAY,EAAZA,YAFK;AAGLC,IAAAA,YAAY,EAAZA;AAHK,GAAP;AAKH,CA7BM","sourcesContent":["import { useMutation } from \"@apollo/react-hooks\";\r\nimport { useForm } from '../../../../../hooks/useForm';\r\nimport { GET_PLACE } from \"../../../../../utility/querys/getPlace\";\r\nimport { REVIEW_MUTATION } from \"../../../../../utility/mutations/addReview\";\r\n\r\nexport const useReview = ({ placeId, userId }) => {\r\n    const [addReview] = useMutation(REVIEW_MUTATION, {\r\n      refetchQueries: [\r\n        {query: GET_PLACE, variables: {placeId} }\r\n      ]\r\n    });\r\n    const { state, handleChange, handleSubmit } = useForm({\r\n      onSubmit: ({ ...values }) => {\r\n        console.log(\"Valores\", values);\r\n        return addReview({\r\n            variables: {\r\n                input: values\r\n            },\r\n        }).then(({ data }) => {\r\n            return data;\r\n        });\r\n      },\r\n      initialValues: {\r\n        rating: 0,\r\n        placeId: placeId,\r\n        userId: userId,\r\n        description: ''\r\n      }\r\n    });\r\n    return {\r\n      state,\r\n      handleChange,\r\n      handleSubmit\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}