{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\Surface.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport shadow from \"../styles/shadow\";\nimport { withTheme } from \"../core/theming\";\n\nvar Surface = function (_React$Component) {\n  _inherits(Surface, _React$Component);\n\n  var _super = _createSuper(Surface);\n\n  function Surface() {\n    _classCallCheck(this, Surface);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Surface, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"style\", \"theme\"]);\n\n      var flattenedStyles = StyleSheet.flatten(style) || {};\n      var elevation = flattenedStyles.elevation;\n      return React.createElement(Animated.View, _extends({}, rest, {\n        style: [{\n          backgroundColor: theme.colors.surface\n        }, elevation && shadow(elevation), style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Surface;\n}(React.Component);\n\nexport default withTheme(Surface);","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/Surface.js"],"names":["React","shadow","withTheme","Surface","props","style","theme","rest","flattenedStyles","StyleSheet","flatten","elevation","backgroundColor","colors","surface","Component"],"mappings":";;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOC,MAAP;AACA,SAASC,SAAT;;IAmDMC,O;;;;;;;;;;;;;6BACK;AAAA,wBAC2B,KAAKC,KADhC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,KADR,eACQA,KADR;AAAA,UACkBC,IADlB;;AAEP,UAAMC,eAAe,GAAGC,UAAU,CAACC,OAAX,CAAmBL,KAAnB,KAA6B,EAArD;AAFO,UAGCM,SAHD,GAGeH,eAHf,CAGCG,SAHD;AAKP,aACE,oBAAC,QAAD,CAAU,IAAV,eACMJ,IADN;AAEE,QAAA,KAAK,EAAE,CACL;AAAEK,UAAAA,eAAe,EAAEN,KAAK,CAACO,MAAN,CAAaC;AAAhC,SADK,EAELH,SAAS,IAAIV,MAAM,CAACU,SAAD,CAFd,EAGLN,KAHK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAUD;;;;EAhBmBL,KAAK,CAACe,S;;AAmB5B,eAAeb,SAAS,CAACC,OAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport shadow from '../styles/shadow';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types';\n\ntype Props = React.ElementConfig<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.Node,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * A shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-1.png\" />\n *   <img src=\"screenshots/surface-2.png\" />\n *   <img src=\"screenshots/surface-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *     elevation: 4,\n *   },\n * });\n * ```\n */\nclass Surface extends React.Component<Props> {\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const flattenedStyles = StyleSheet.flatten(style) || {};\n    const { elevation } = flattenedStyles;\n\n    return (\n      <Animated.View\n        {...rest}\n        style={[\n          { backgroundColor: theme.colors.surface },\n          elevation && shadow(elevation),\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nexport default withTheme(Surface);\n"]},"metadata":{},"sourceType":"module"}