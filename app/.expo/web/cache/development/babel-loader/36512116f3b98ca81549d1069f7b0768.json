{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\node_modules\\\\react-native-paper\\\\src\\\\components\\\\TextInput\\\\TextInputFlat.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nvar AnimatedText = Animated.createAnimatedComponent(Text);\nvar MINIMIZED_LABEL_Y_OFFSET = -12;\nvar MAXIMIZED_LABEL_FONT_SIZE = 16;\nvar MINIMIZED_LABEL_FONT_SIZE = 12;\nvar LABEL_WIGGLE_X_OFFSET = 4;\nvar LABEL_PADDING_HORIZONTAL = 12;\nvar RANDOM_VALUE_TO_CENTER_LABEL = 4;\n\nvar TextInputFlat = function (_React$Component) {\n  _inherits(TextInputFlat, _React$Component);\n\n  var _super = _createSuper(TextInputFlat);\n\n  function TextInputFlat() {\n    _classCallCheck(this, TextInputFlat);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextInputFlat, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          label = _this$props.label,\n          error = _this$props.error,\n          selectionColor = _this$props.selectionColor,\n          underlineColor = _this$props.underlineColor,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          render = _this$props.render,\n          multiline = _this$props.multiline,\n          parentState = _this$props.parentState,\n          innerRef = _this$props.innerRef,\n          onFocus = _this$props.onFocus,\n          onBlur = _this$props.onBlur,\n          onChangeText = _this$props.onChangeText,\n          onLayoutAnimatedText = _this$props.onLayoutAnimatedText,\n          rest = _objectWithoutProperties(_this$props, [\"disabled\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\"]);\n\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var fontFamily = fonts.regular;\n      var hasActiveOutline = parentState.focused || error;\n      var inputTextColor, activeColor, underlineColorCustom, placeholderColor;\n\n      if (disabled) {\n        inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n        placeholderColor = colors.disabled;\n        underlineColorCustom = 'transparent';\n      } else {\n        inputTextColor = colors.text;\n        activeColor = error ? colors.error : colors.primary;\n        placeholderColor = colors.placeholder;\n        underlineColorCustom = underlineColor || colors.disabled;\n      }\n\n      var containerStyle = {\n        backgroundColor: theme.dark ? color(colors.background).lighten(0.24).rgb().string() : color(colors.background).darken(0.06).rgb().string(),\n        borderTopLeftRadius: theme.roundness,\n        borderTopRightRadius: theme.roundness\n      };\n      var labelHalfWidth = parentState.labelLayout.width / 2;\n      var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (1 - MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE) * labelHalfWidth;\n      var labelStyle = {\n        fontFamily: fontFamily,\n        fontSize: MAXIMIZED_LABEL_FONT_SIZE,\n        transform: [{\n          translateX: parentState.error.interpolate({\n            inputRange: [0, 0.5, 1],\n            outputRange: [0, parentState.value && error ? LABEL_WIGGLE_X_OFFSET : 0, 0]\n          })\n        }, {\n          translateY: parentState.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [MINIMIZED_LABEL_Y_OFFSET, 0]\n          })\n        }, {\n          scale: parentState.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE, 1]\n          })\n        }, {\n          translateX: parentState.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [baseLabelTranslateX > 0 ? baseLabelTranslateX + labelHalfWidth / LABEL_PADDING_HORIZONTAL - RANDOM_VALUE_TO_CENTER_LABEL : baseLabelTranslateX - labelHalfWidth / LABEL_PADDING_HORIZONTAL + RANDOM_VALUE_TO_CENTER_LABEL, 0]\n          })\n        }]\n      };\n      return React.createElement(View, {\n        style: [containerStyle, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.underline, {\n          backgroundColor: error ? colors.error : parentState.focused ? activeColor : underlineColorCustom,\n          transform: [{\n            scaleY: parentState.focused ? 1 : 0.5\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }), label ? React.createElement(View, {\n        pointerEvents: \"none\",\n        style: [StyleSheet.absoluteFill, {\n          opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, React.createElement(AnimatedText, {\n        onLayout: onLayoutAnimatedText,\n        style: [styles.placeholder, styles.placeholderFlat, labelStyle, {\n          color: activeColor,\n          opacity: parentState.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [hasActiveOutline ? 1 : 0, 0]\n          })\n        }],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, label), React.createElement(AnimatedText, {\n        style: [styles.placeholder, styles.placeholderFlat, labelStyle, {\n          color: placeholderColor,\n          opacity: hasActiveOutline ? parentState.labeled : 1\n        }],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }\n      }, label)) : null, render(_objectSpread(_objectSpread({}, rest), {}, {\n        ref: innerRef,\n        onChangeText: onChangeText,\n        placeholder: label ? parentState.placeholder : this.props.placeholder,\n        placeholderTextColor: placeholderColor,\n        editable: !disabled,\n        selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        underlineColorAndroid: 'transparent',\n        multiline: multiline,\n        style: [styles.input, this.props.label ? styles.inputFlatWithLabel : styles.inputFlatWithoutLabel, {\n          color: inputTextColor,\n          fontFamily: fontFamily,\n          textAlignVertical: multiline ? 'top' : 'center'\n        }]\n      })));\n    }\n  }]);\n\n  return TextInputFlat;\n}(React.Component);\n\nTextInputFlat.defaultProps = {\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: function render(props) {\n    return React.createElement(NativeTextInput, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }\n    }));\n  }\n};\nexport default TextInputFlat;\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    fontSize: 16,\n    paddingHorizontal: LABEL_PADDING_HORIZONTAL\n  },\n  placeholderFlat: {\n    top: 19\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: 12,\n    fontSize: 16,\n    margin: 0,\n    minHeight: 58,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1\n  },\n  inputFlatWithLabel: {\n    paddingTop: 24,\n    paddingBottom: 6\n  },\n  inputFlatWithoutLabel: {\n    paddingVertical: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/node_modules/react-native-paper/src/components/TextInput/TextInputFlat.js"],"names":["React","color","Text","AnimatedText","Animated","createAnimatedComponent","MINIMIZED_LABEL_Y_OFFSET","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","LABEL_PADDING_HORIZONTAL","RANDOM_VALUE_TO_CENTER_LABEL","TextInputFlat","props","disabled","label","error","selectionColor","underlineColor","style","theme","render","multiline","parentState","innerRef","onFocus","onBlur","onChangeText","onLayoutAnimatedText","rest","colors","fonts","fontFamily","regular","hasActiveOutline","focused","inputTextColor","activeColor","underlineColorCustom","placeholderColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelHalfWidth","labelLayout","width","baseLabelTranslateX","I18nManager","isRTL","labelStyle","fontSize","transform","translateX","interpolate","inputRange","outputRange","value","translateY","labeled","scale","styles","underline","scaleY","StyleSheet","absoluteFill","opacity","measured","placeholderFlat","ref","placeholderTextColor","editable","underlineColorAndroid","input","inputFlatWithLabel","inputFlatWithoutLabel","textAlignVertical","Component","defaultProps","create","position","left","paddingHorizontal","top","right","bottom","height","flexGrow","margin","minHeight","textAlign","zIndex","paddingTop","paddingBottom","paddingVertical"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst AnimatedText = Animated.createAnimatedComponent(Text);\n\nconst MINIMIZED_LABEL_Y_OFFSET = -12;\nconst MAXIMIZED_LABEL_FONT_SIZE = 16;\nconst MINIMIZED_LABEL_FONT_SIZE = 12;\nconst LABEL_WIGGLE_X_OFFSET = 4;\nconst LABEL_PADDING_HORIZONTAL = 12;\nconst RANDOM_VALUE_TO_CENTER_LABEL = 4; // Don't know why 4, but it works\n\nclass TextInputFlat extends React.Component<ChildTextInputProps, {}> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const fontFamily = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    let inputTextColor, activeColor, underlineColorCustom, placeholderColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = colors.placeholder;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background)\n            .lighten(0.24)\n            .rgb()\n            .string()\n        : color(colors.background)\n            .darken(0.06)\n            .rgb()\n            .string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelHalfWidth = parentState.labelLayout.width / 2;\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (1 - MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE) *\n      labelHalfWidth;\n\n    const labelStyle = {\n      fontFamily,\n      fontSize: MAXIMIZED_LABEL_FONT_SIZE,\n      transform: [\n        {\n          // Wiggle the label when there's an error\n          translateX: parentState.error.interpolate({\n            inputRange: [0, 0.5, 1],\n            outputRange: [\n              0,\n              parentState.value && error ? LABEL_WIGGLE_X_OFFSET : 0,\n              0,\n            ],\n          }),\n        },\n        {\n          // Move label to top\n          translateY: parentState.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [MINIMIZED_LABEL_Y_OFFSET, 0],\n          }),\n        },\n        {\n          // Make label smaller\n          scale: parentState.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\n              MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE,\n              1,\n            ],\n          }),\n        },\n        {\n          // Offset label scale since RN doesn't support transform origin\n          translateX: parentState.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\n              baseLabelTranslateX > 0\n                ? baseLabelTranslateX +\n                  labelHalfWidth / LABEL_PADDING_HORIZONTAL -\n                  RANDOM_VALUE_TO_CENTER_LABEL\n                : baseLabelTranslateX -\n                  labelHalfWidth / LABEL_PADDING_HORIZONTAL +\n                  RANDOM_VALUE_TO_CENTER_LABEL,\n              0,\n            ],\n          }),\n        },\n      ],\n    };\n\n    return (\n      <View style={[containerStyle, style]}>\n        <Animated.View\n          style={[\n            styles.underline,\n            {\n              backgroundColor: error\n                ? colors.error\n                : parentState.focused\n                  ? activeColor\n                  : underlineColorCustom,\n              // Underlines is thinner when input is not focused\n              transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n            },\n          ]}\n        />\n\n        {label ? (\n          // Position colored placeholder and gray placeholder on top of each other and crossfade them\n          // This gives the effect of animating the color, but allows us to use native driver\n          <View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              {\n                opacity:\n                  // Hide the label in minimized state until we measure it's width\n                  parentState.value || parentState.focused\n                    ? parentState.labelLayout.measured\n                      ? 1\n                      : 0\n                    : 1,\n              },\n            ]}\n          >\n            <AnimatedText\n              onLayout={onLayoutAnimatedText}\n              style={[\n                styles.placeholder,\n                styles.placeholderFlat,\n                labelStyle,\n                {\n                  color: activeColor,\n                  opacity: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [hasActiveOutline ? 1 : 0, 0],\n                  }),\n                },\n              ]}\n              numberOfLines={1}\n            >\n              {label}\n            </AnimatedText>\n            <AnimatedText\n              style={[\n                styles.placeholder,\n                styles.placeholderFlat,\n                labelStyle,\n                {\n                  color: placeholderColor,\n                  opacity: hasActiveOutline ? parentState.labeled : 1,\n                },\n              ]}\n              numberOfLines={1}\n            >\n              {label}\n            </AnimatedText>\n          </View>\n        ) : null}\n\n        {render(\n          ({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderColor,\n            editable: !disabled,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              this.props.label\n                ? styles.inputFlatWithLabel\n                : styles.inputFlatWithoutLabel,\n              {\n                color: inputTextColor,\n                fontFamily,\n                textAlignVertical: multiline ? 'top' : 'center',\n              },\n            ],\n          }: RenderProps)\n        )}\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    fontSize: 16,\n    paddingHorizontal: LABEL_PADDING_HORIZONTAL,\n  },\n  placeholderFlat: {\n    top: 19,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: 12,\n    fontSize: 16,\n    margin: 0,\n    minHeight: 58,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputFlatWithLabel: {\n    paddingTop: 24,\n    paddingBottom: 6,\n  },\n  inputFlatWithoutLabel: {\n    paddingVertical: 15,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}