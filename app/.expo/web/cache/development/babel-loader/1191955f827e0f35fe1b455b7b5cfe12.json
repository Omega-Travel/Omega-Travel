{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\Trip\\\\index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query GetTripForUser($userId: ID!) {\\n        trips(userId: $userId) {\\n            id,\\n            name,\\n            userId,\\n            tripPlaces {\\n                id,\\n                placeId,\\n                place {\\n                    id,\\n                    name,\\n                    mainImageUrl\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { Layout } from \"./Layout\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Loading } from \"../Loading\";\nvar GET_TRIPS = gql(_templateObject());\nexport var Trip = function Trip(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      token = _useAuth.token;\n\n  var userId = token !== null ? token : \"\";\n\n  var _useQuery = useQuery(GET_TRIPS, {\n    variables: {\n      userId: userId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  useSetNavigationOptions(\"Trip\", true);\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    });\n  } else if (error) {\n    console.log(error);\n  } else {\n    return React.createElement(Layout, {\n      navigation: navigation,\n      token: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/Trip/index.tsx"],"names":["React","useSetNavigationOptions","useAuth","Layout","useQuery","gql","Loading","GET_TRIPS","Trip","navigation","token","userId","variables","loading","error","data","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT;AACA,SAASC,OAAT;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT;AAEA,IAAMC,SAAS,GAAGF,GAAH,mBAAf;AAmBA,OAAO,IAAMG,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,iBAClBP,OAAO,EADW;AAAA,MAC5BQ,KAD4B,YAC5BA,KAD4B;;AAEpC,MAAMC,MAAM,GAAGD,KAAK,KAAK,IAAV,GAAiBA,KAAjB,GAAyB,EAAxC;;AAFoC,kBAGHN,QAAQ,CAACG,SAAD,EAAY;AACjDK,IAAAA,SAAS,EAAE;AAAED,MAAAA,MAAM,EAANA;AAAF;AADsC,GAAZ,CAHL;AAAA,MAG5BE,OAH4B,aAG5BA,OAH4B;AAAA,MAGnBC,KAHmB,aAGnBA,KAHmB;AAAA,MAGZC,IAHY,aAGZA,IAHY;;AAMpCd,EAAAA,uBAAuB,CAAC,MAAD,EAAS,IAAT,CAAvB;;AAEA,MAAIY,OAAJ,EAAc;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGK,IAAKC,KAAL,EAAa;AACdE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,GAFI,MAGA;AACD,WAAO,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAEL,UAApB;AAAgC,MAAA,KAAK,EAAEC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CAjBM","sourcesContent":["import React from \"react\";\r\nimport { useSetNavigationOptions } from '../../hooks/useSetNavigationOptions';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { Layout } from './Layout';\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Loading } from \"../Loading\";\r\n\r\nconst GET_TRIPS = gql`\r\n    query GetTripForUser($userId: ID!) {\r\n        trips(userId: $userId) {\r\n            id,\r\n            name,\r\n            userId,\r\n            tripPlaces {\r\n                id,\r\n                placeId,\r\n                place {\r\n                    id,\r\n                    name,\r\n                    mainImageUrl\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Trip = ({ navigation }) => {\r\n    const { token } = useAuth();\r\n    const userId = token !== null ? token : \"\";\r\n    const { loading, error, data } = useQuery(GET_TRIPS, {\r\n        variables: { userId }\r\n    });\r\n    useSetNavigationOptions(\"Trip\", true);\r\n\r\n    if( loading ) {\r\n        return <Loading />\r\n    }\r\n    else if ( error ) {\r\n        console.log(error);\r\n    }\r\n    else {\r\n        return <Layout navigation={navigation} token={token} />\r\n    }  \r\n}"]},"metadata":{},"sourceType":"module"}