{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\PlaceDetail\\\\index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query getPlace($placeId: ID!) {\\n        place(id: $placeId) {\\n            id,\\n            name,\\n            description,\\n            continentId,\\n            regionId,\\n            images {\\n                id,\\n                url\\n            },\\n            activities {\\n                id,\\n                price,\\n                name\\n            },\\n            reviews {\\n                id,\\n                description,\\n                rating,\\n                user{\\n                id,\\n                fullname\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport { Layout } from \"./Layout\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\nimport { Loading } from \"../Loading\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useAlert } from \"../../hooks/useAlert\";\nvar GET_PLACE = gql(_templateObject());\nexport var PlaceDetail = function PlaceDetail(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      token = _useAuth.token;\n\n  var route = useRoute();\n  var placeId = route.params.id;\n  var title = route.params.name;\n  useSetNavigationOptions(title, true);\n\n  var _useQuery = useQuery(GET_PLACE, {\n    variables: {\n      placeId: placeId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var handlePress = function handlePress(placeId) {\n    if (!token) {\n      useAlert({\n        titleError: \"Sorry you cant do that\",\n        errorMessage: \"You need to login to add place to trips\"\n      });\n    } else {\n      navigation.push(\"Trip\", {\n        placeId: placeId\n      });\n    }\n  };\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }\n    });\n  } else if (error) {\n    console.log(error);\n  } else {\n    var rating = 2;\n    data.place.reviews.map(function (review) {\n      rating += review.rating;\n    });\n    return React.createElement(Layout, {\n      handlePress: handlePress,\n      navigation: navigation,\n      place: data.place,\n      rating: rating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/PlaceDetail/index.tsx"],"names":["React","Layout","useRoute","useSetNavigationOptions","Loading","useQuery","gql","useAuth","useAlert","GET_PLACE","PlaceDetail","navigation","token","route","placeId","params","id","title","name","variables","loading","error","data","handlePress","titleError","errorMessage","push","console","log","rating","place","reviews","map","review"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,uBAAT;AACA,SAASC,OAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT;AACA,SAASC,QAAT;AAEA,IAAMC,SAAS,GAAGH,GAAH,mBAAf;AA8BA,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,iBACzBJ,OAAO,EADkB;AAAA,MACnCK,KADmC,YACnCA,KADmC;;AAE3C,MAAMC,KAAS,GAAGX,QAAQ,EAA1B;AACA,MAAMY,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA7B;AACA,MAAMC,KAAK,GAAGJ,KAAK,CAACE,MAAN,CAAaG,IAA3B;AACAf,EAAAA,uBAAuB,CAACc,KAAD,EAAQ,IAAR,CAAvB;;AAL2C,kBAOVZ,QAAQ,CAACI,SAAD,EACzC;AACIU,IAAAA,SAAS,EAAE;AAAEL,MAAAA,OAAO,EAAPA;AAAF;AADf,GADyC,CAPE;AAAA,MAOnCM,OAPmC,aAOnCA,OAPmC;AAAA,MAO1BC,KAP0B,aAO1BA,KAP0B;AAAA,MAOnBC,IAPmB,aAOnBA,IAPmB;;AAY3C,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACT,OAAD,EAAa;AAC7B,QAAG,CAACF,KAAJ,EAAW;AACRJ,MAAAA,QAAQ,CAAC;AAACgB,QAAAA,UAAU,EAAE,wBAAb;AAAuCC,QAAAA,YAAY,EAAE;AAArD,OAAD,CAAR;AACF,KAFD,MAGK;AACDd,MAAAA,UAAU,CAACe,IAAX,CAAgB,MAAhB,EAAwB;AAACZ,QAAAA,OAAO,EAAEA;AAAV,OAAxB;AACH;AACJ,GAPD;;AASA,MAAIM,OAAJ,EAAc;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGK,IAAKC,KAAL,EAAa;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,GAFI,MAGA;AACD,QAAIQ,MAAM,GAAG,CAAb;AACAP,IAAAA,IAAI,CAACQ,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAwB,UAAAC,MAAM,EAAI;AAC9BJ,MAAAA,MAAM,IAAII,MAAM,CAACJ,MAAjB;AACH,KAFD;AAGA,WAAO,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAEN,WAArB;AAAkC,MAAA,UAAU,EAAEZ,UAA9C;AAA0D,MAAA,KAAK,EAAEW,IAAI,CAACQ,KAAtE;AAA6E,MAAA,MAAM,EAAED,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CAlCM","sourcesContent":["import * as React from \"react\";\r\nimport { Layout } from './Layout';\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { useSetNavigationOptions } from \"../../hooks/useSetNavigationOptions\";\r\nimport { Loading } from \"../Loading\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { useAlert } from \"../../hooks/useAlert\";\r\n\r\nconst GET_PLACE = gql`\r\n    query getPlace($placeId: ID!) {\r\n        place(id: $placeId) {\r\n            id,\r\n            name,\r\n            description,\r\n            continentId,\r\n            regionId,\r\n            images {\r\n                id,\r\n                url\r\n            },\r\n            activities {\r\n                id,\r\n                price,\r\n                name\r\n            },\r\n            reviews {\r\n                id,\r\n                description,\r\n                rating,\r\n                user{\r\n                id,\r\n                fullname\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const PlaceDetail = ({ navigation }) => {\r\n    const { token } = useAuth();\r\n    const route:any = useRoute();\r\n    const placeId = route.params.id;\r\n    const title = route.params.name;\r\n    useSetNavigationOptions(title, true);\r\n\r\n    const { loading, error, data } = useQuery(GET_PLACE,\r\n    {\r\n        variables: { placeId }\r\n    });\r\n\r\n    const handlePress = (placeId) => {\r\n        if(!token) {\r\n           useAlert({titleError: \"Sorry you cant do that\", errorMessage: \"You need to login to add place to trips\"}) \r\n        }\r\n        else {\r\n            navigation.push(\"Trip\", {placeId: placeId});\r\n        }\r\n    }\r\n\r\n    if( loading ) {\r\n        return <Loading />\r\n    } \r\n    else if ( error ) {\r\n        console.log(error);\r\n    }\r\n    else {\r\n        let rating = 2;\r\n        data.place.reviews.map( review => {\r\n            rating += review.rating;\r\n        });\r\n        return <Layout handlePress={handlePress} navigation={navigation} place={data.place} rating={rating}/>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}