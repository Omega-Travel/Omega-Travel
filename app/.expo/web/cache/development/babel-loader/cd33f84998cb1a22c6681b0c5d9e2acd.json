{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fido\\\\Documents\\\\GitHub\\\\UI-Design-React\\\\app\\\\screens\\\\Trip\\\\TripDetail\\\\index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query GetTripPlaces($tripId: ID!) {\\n        tripsPlaces(tripId: $tripId) {\\n            id,\\n            placeId,\\n            tripId,\\n            place {\\n                id,\\n                name,\\n                mainImageUrl\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Layout } from \"./Layout\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRoute } from '@react-navigation/native';\nimport { gql } from 'apollo-boost';\nimport { useAlert } from \"../../../hooks/useAlert\";\nimport { Loading } from \"../../Loading\";\nvar GET_TRIPS_PLACE = gql(_templateObject());\nexport var TripDetail = function TripDetail(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var tripId = route.params.tripId;\n\n  var _useQuery = useQuery(GET_TRIPS_PLACE, {\n    variables: {\n      tripId: tripId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    });\n  } else if (error) {\n    useAlert({\n      titleError: \"Oh snap! You got an error!\",\n      errorMessage: error\n    });\n  } else {\n    console.log(data.tripsPlaces);\n    return React.createElement(Layout, {\n      tripsPlaces: data.tripsPlaces,\n      navigation: navigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Fido/Documents/GitHub/UI-Design-React/app/screens/Trip/TripDetail/index.tsx"],"names":["React","Layout","useQuery","useRoute","gql","useAlert","Loading","GET_TRIPS_PLACE","TripDetail","navigation","route","tripId","params","variables","loading","error","data","titleError","errorMessage","console","log","tripsPlaces"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT;AACA,SAASC,OAAT;AAEA,IAAMC,eAAe,GAAGH,GAAH,mBAArB;AAeA,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC1C,MAAMC,KAAS,GAAGP,QAAQ,EAA1B;AACA,MAAMQ,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaD,MAA5B;;AAF0C,kBAITT,QAAQ,CAACK,eAAD,EAAkB;AACvDM,IAAAA,SAAS,EAAE;AAAEF,MAAAA,MAAM,EAANA;AAAF;AAD4C,GAAlB,CAJC;AAAA,MAIlCG,OAJkC,aAIlCA,OAJkC;AAAA,MAIzBC,KAJyB,aAIzBA,KAJyB;AAAA,MAIlBC,IAJkB,aAIlBA,IAJkB;;AAQ1C,MAAIF,OAAJ,EAAc;AACV,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAGK,IAAKC,KAAL,EAAa;AAEdV,IAAAA,QAAQ,CAAC;AAACY,MAAAA,UAAU,EAAE,4BAAb;AAA2CC,MAAAA,YAAY,EAAEH;AAAzD,KAAD,CAAR;AACH,GAHI,MAIA;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,WAAjB;AACA,WAAO,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAEL,IAAI,CAACK,WAA1B;AAAuC,MAAA,UAAU,EAAEZ,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;AACJ,CAnBM","sourcesContent":["import React from 'react';\r\nimport { Layout } from './Layout';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { gql } from 'apollo-boost';\r\nimport { useAlert } from '../../../hooks/useAlert';\r\nimport { Loading } from '../../Loading';\r\n\r\nconst GET_TRIPS_PLACE = gql`\r\n    query GetTripPlaces($tripId: ID!) {\r\n        tripsPlaces(tripId: $tripId) {\r\n            id,\r\n            placeId,\r\n            tripId,\r\n            place {\r\n                id,\r\n                name,\r\n                mainImageUrl\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TripDetail = ({ navigation }) => {\r\n    const route:any = useRoute();\r\n    const tripId = route.params.tripId;\r\n\r\n    const { loading, error, data } = useQuery(GET_TRIPS_PLACE, {\r\n        variables: { tripId }\r\n    });\r\n\r\n    if( loading ) {\r\n        return <Loading />\r\n    }\r\n    else if ( error ) {\r\n\r\n        useAlert({titleError: \"Oh snap! You got an error!\", errorMessage: error});\r\n    }\r\n    else {\r\n        console.log(data.tripsPlaces);\r\n        return <Layout tripsPlaces={data.tripsPlaces} navigation={navigation} />\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}